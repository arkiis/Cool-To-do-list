{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\cool-todo-list\\\\src\\\\App.js\";\nimport React, { Suspense } from \"react\";\nimport Header from \"./components/layout/Header\";\nimport { NotificationContainer } from \"react-notifications\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Register from \"./components/Auth/Register\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"./components/layout\";\nimport Home from \"./pages/Home\";\nimport ModalContainer from \"./components/ModalContainer\";\nimport Logout from \"./components/Auth/Logout\";\nconst Content = React.lazy(() => import(\"./components/layout/Content\"));\nconst VerifyEmail = React.lazy(() => import(\"./components/Auth/VerifyEmail\"));\n\nconst App = ({\n  loggedIn,\n  emailVerified\n}) => {\n  let routes;\n\n  if (loggedIn && !emailVerified) {\n    routes = React.createElement(Suspense, {\n      fallback: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Loading...\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/verify-email\",\n      component: VerifyEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/verify-email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })));\n  } else if (loggedIn && emailVerified) {\n    routes = React.createElement(Suspense, {\n      fallback: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Loading...\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/home\",\n      component: Content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/home/logout\",\n      component: Logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })));\n  } else {\n    routes = React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      component: Register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, routes, React.createElement(ModalContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n};\n\nApp.propTypes = {\n  darkModeDefault: PropTypes.bool\n};\n\nconst mapStateToProps = ({\n  firebase\n}) => ({\n  loggedIn: firebase.auth.uid,\n  emailVerified: firebase.auth.emailVerified\n});\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["C:/Users/Owner/Documents/cool-todo-list/src/App.js"],"names":["React","Suspense","Header","NotificationContainer","Route","Redirect","Switch","connect","Register","PropTypes","Layout","Home","ModalContainer","Logout","Content","lazy","VerifyEmail","App","loggedIn","emailVerified","routes","propTypes","darkModeDefault","bool","mapStateToProps","firebase","auth","uid"],"mappings":"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","sourcesContent":["import React, { Suspense } from \"react\";\r\nimport Header from \"./components/layout/Header\";\r\nimport { NotificationContainer } from \"react-notifications\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Register from \"./components/Auth/Register\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport Layout from \"./components/layout\";\r\nimport Home from \"./pages/Home\";\r\nimport ModalContainer from \"./components/ModalContainer\";\r\nimport Logout from \"./components/Auth/Logout\";\r\nconst Content = React.lazy(() => import(\"./components/layout/Content\"));\r\nconst VerifyEmail = React.lazy(() => import(\"./components/Auth/VerifyEmail\"));\r\n\r\nconst App = ({ loggedIn, emailVerified }) => {\r\n  let routes;\r\n  if (loggedIn && !emailVerified) {\r\n    routes = (\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <Switch>\r\n          <Route exact path=\"/verify-email\" component={VerifyEmail} />\r\n          <Redirect to=\"/verify-email\" />\r\n        </Switch>\r\n      </Suspense>\r\n    );\r\n  } else if (loggedIn && emailVerified) {\r\n    routes = (\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <Switch>\r\n          <Route exact path=\"/home\" component={Content} />\r\n          <Route exact path=\"/home/logout\" component={Logout} />\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n      </Suspense>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/signup\" component={Register} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      {routes}\r\n      <ModalContainer />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  darkModeDefault: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = ({ firebase }) => ({\r\n  loggedIn: firebase.auth.uid,\r\n  emailVerified: firebase.auth.emailVerified\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}