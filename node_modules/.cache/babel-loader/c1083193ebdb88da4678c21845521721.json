{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\cool-todo-list\\\\src\\\\components\\\\layout\\\\Header.js\";\nimport React, { useState } from \"react\";\nimport { FaMoon, FaSun } from \"react-icons/fa\";\nimport PropTypes from \"prop-types\";\nimport Logo from \"../Logo\";\nimport { AddTask } from \"../AddTask\";\nimport NavLinks from \"../NavLinks\";\n\nconst Header = ({\n  darkMode,\n  setDarkMode,\n  loggedIn\n}) => {\n  const [shouldShowMain, setShouldShowMain] = useState(false);\n  const [showQuickAddTask, setShowQuickAddTask] = useState(false);\n  let links;\n\n  if (loggedIn.uid) {\n    links = React.createElement(React.Fragment, null, React.createElement(\"li\", {\n      \"data-testid\": \"quick-add-task-action\",\n      className: \"settings__add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      \"aria-label\": \"Quick Add Task\",\n      onClick: () => {\n        setShowQuickAddTask(true);\n        setShouldShowMain(true);\n      },\n      onKeyDown: () => {\n        setShowQuickAddTask(true);\n        setShouldShowMain(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"+\")), React.createElement(\"li\", {\n      \"data-testid\": \"dark-mode-action\",\n      className: \"settings__darkmode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      \"aria-label\": \"Darkmode on/off\",\n      type: \"button\",\n      onClick: () => setDarkMode(!darkMode),\n      onKeyDown: () => setDarkMode(!darkMode),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, darkMode ? React.createElement(FaSun, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }) : React.createElement(FaMoon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }))), React.createElement(AddTask, {\n      showAddTaskMain: false,\n      shouldShowMain: shouldShowMain,\n      showQuickAddTask: showQuickAddTask,\n      setShowQuickAddTask: setShowQuickAddTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  } else {\n    links = React.createElement(React.Fragment, null, React.createElement(NavLinks, {\n      link: \"/premium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Premium\"), React.createElement(NavLinks, {\n      link: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Login\"), React.createElement(NavLinks, {\n      link: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Signup\"));\n  }\n\n  return React.createElement(\"header\", {\n    className: `${loggedIn.uid ? \"header\" : \"signedOutHeader\"}`,\n    \"data-testid\": \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, links))));\n};\n\nexport default Header;\nHeader.propTypes = {\n  darkMode: PropTypes.bool.isRequired,\n  setDarkMode: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["C:/Users/Owner/Documents/cool-todo-list/src/components/layout/Header.js"],"names":["React","useState","FaMoon","FaSun","PropTypes","Logo","AddTask","NavLinks","Header","darkMode","setDarkMode","loggedIn","shouldShowMain","setShouldShowMain","showQuickAddTask","setShowQuickAddTask","links","uid","propTypes","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FaMoon, FaSun } from \"react-icons/fa\";\r\nimport PropTypes from \"prop-types\";\r\nimport Logo from \"../Logo\";\r\nimport { AddTask } from \"../AddTask\";\r\nimport NavLinks from \"../NavLinks\";\r\n\r\nconst Header = ({ darkMode, setDarkMode, loggedIn }) => {\r\n  const [shouldShowMain, setShouldShowMain] = useState(false);\r\n  const [showQuickAddTask, setShowQuickAddTask] = useState(false);\r\n\r\n  let links;\r\n\r\n  if (loggedIn.uid) {\r\n    links = (\r\n      <>\r\n        <li data-testid=\"quick-add-task-action\" className=\"settings__add\">\r\n          <button\r\n            aria-label=\"Quick Add Task\"\r\n            onClick={() => {\r\n              setShowQuickAddTask(true);\r\n              setShouldShowMain(true);\r\n            }}\r\n            onKeyDown={() => {\r\n              setShowQuickAddTask(true);\r\n              setShouldShowMain(true);\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n        </li>\r\n\r\n        <li data-testid=\"dark-mode-action\" className=\"settings__darkmode\">\r\n          <button\r\n            aria-label=\"Darkmode on/off\"\r\n            type=\"button\"\r\n            onClick={() => setDarkMode(!darkMode)}\r\n            onKeyDown={() => setDarkMode(!darkMode)}\r\n          >\r\n            {darkMode ? <FaSun /> : <FaMoon />}\r\n          </button>\r\n        </li>\r\n\r\n        <AddTask\r\n          showAddTaskMain={false}\r\n          shouldShowMain={shouldShowMain}\r\n          showQuickAddTask={showQuickAddTask}\r\n          setShowQuickAddTask={setShowQuickAddTask}\r\n        />\r\n      </>\r\n    );\r\n  } else {\r\n    links = (\r\n      <>\r\n        <NavLinks link=\"/premium\">Premium</NavLinks>\r\n        <NavLinks link=\"/signin\">Login</NavLinks>\r\n        <NavLinks link=\"/signup\">Signup</NavLinks>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className={`${loggedIn.uid ? \"header\" : \"signedOutHeader\"}`}\r\n      data-testid=\"header\"\r\n    >\r\n      <nav>\r\n        <Logo />\r\n        <div className=\"settings\">\r\n          <ul>{links}</ul>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\nHeader.propTypes = {\r\n  darkMode: PropTypes.bool.isRequired,\r\n  setDarkMode: PropTypes.func.isRequired\r\n};\r\n"]},"metadata":{},"sourceType":"module"}