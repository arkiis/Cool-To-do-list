{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\cool-todo-list\\\\src\\\\components\\\\Auth\\\\Register.js\";\nimport React from \"react\"; // Redux\n\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from \"react-notifications\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { labels } from \"../../constants/index\"; // Actions\n\nimport { signUp } from \"../../store/actions\";\nimport { hideModal } from \"../../store/actions/ModalActions\";\nimport Input from \"../Forms/Input.js\";\nimport Message from \"../Message\";\nimport Modal from \"../Modal\";\nconst SignUpSchema = Yup.object().shape({\n  userName: Yup.string().required(\"You need a username silly!\").min(3, \"Too short\").max(25, \"Too long\"),\n  email: Yup.string().email(`email dosen't work :/`).required(\"You need an email silly!\"),\n  password: Yup.string().required(\"You need a password silly!\").min(8, \"Too short\"),\n  confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], `Password doesn't match`).required(\"You need to confirm your password\"),\n  acceptedTerms: Yup.boolean().required(\"Required\").oneOf([true], \"You must accept the terms and conditions\")\n});\n\nconst Register = ({\n  signUp,\n  loading,\n  error,\n  hideModal\n}) => {\n  const onClose = () => {\n    hideModal();\n  };\n\n  const onSubmit = () => {\n    hideModal();\n  };\n\n  return React.createElement(Formik, {\n    initialValues: {\n      userName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      acceptedTerms: false\n    },\n    validationSchema: SignUpSchema,\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      await signUp(values);\n      setSubmitting(false);\n      onSubmit();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, ({\n    isSubmitting,\n    isValid\n  }) => //Creating a signup modal\n  React.createElement(Modal, {\n    title: \"Sign up\",\n    onClose: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Form, {\n    className: \"signUpWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"text\",\n    label: labels.username,\n    name: \"userName\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"email\",\n    label: labels.email,\n    name: \"email\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"password\",\n    label: labels.password,\n    name: \"password\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"password\",\n    label: labels.confirmPassword,\n    name: \"confirmPassword\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"checkbox\",\n    label: labels.terms,\n    name: \"acceptedTerms\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    disabled: !isValid || isSubmitting,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Create My Account\"), loading && React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(LinearProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Message, {\n    error: true,\n    show: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, NotificationManager.error({\n    error\n  }))))));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  loading: auth.loading,\n  error: auth.error\n});\n\nconst mapDispatchToProps = {\n  signUp: signUp,\n  hideModal: () => hideModal()\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","map":{"version":3,"sources":["C:/Users/Owner/Documents/cool-todo-list/src/components/Auth/Register.js"],"names":["React","connect","NotificationManager","LinearProgress","Formik","Field","Form","Yup","labels","signUp","hideModal","Input","Message","Modal","SignUpSchema","object","shape","userName","string","required","min","max","email","password","confirmPassword","oneOf","ref","acceptedTerms","boolean","Register","loading","error","onClose","onSubmit","values","setSubmitting","isSubmitting","isValid","username","terms","textAlign","mapStateToProps","auth","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { labels } from \"../../constants/index\";\r\n// Actions\r\nimport { signUp } from \"../../store/actions\";\r\nimport { hideModal } from \"../../store/actions/ModalActions\";\r\nimport Input from \"../Forms/Input.js\";\r\nimport Message from \"../Message\";\r\nimport Modal from \"../Modal\";\r\nconst SignUpSchema = Yup.object().shape({\r\n  userName: Yup.string()\r\n    .required(\"You need a username silly!\")\r\n    .min(3, \"Too short\")\r\n    .max(25, \"Too long\"),\r\n  email: Yup.string()\r\n    .email(`email dosen't work :/`)\r\n    .required(\"You need an email silly!\"),\r\n  password: Yup.string()\r\n    .required(\"You need a password silly!\")\r\n    .min(8, \"Too short\"),\r\n  confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref(\"password\"), null], `Password doesn't match`)\r\n    .required(\"You need to confirm your password\"),\r\n  acceptedTerms: Yup.boolean()\r\n    .required(\"Required\")\r\n    .oneOf([true], \"You must accept the terms and conditions\")\r\n});\r\n\r\nconst Register = ({ signUp, loading, error, hideModal }) => {\r\n  const onClose = () => {\r\n    hideModal();\r\n  };\r\n  const onSubmit = () => {\r\n    hideModal();\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        userName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        acceptedTerms: false\r\n      }}\r\n      validationSchema={SignUpSchema}\r\n      onSubmit={async (values, { setSubmitting }) => {\r\n        await signUp(values);\r\n        setSubmitting(false);\r\n        onSubmit();\r\n      }}\r\n    >\r\n      {({ isSubmitting, isValid }) => (\r\n        //Creating a signup modal\r\n        <Modal title=\"Sign up\" onClose={onClose}>\r\n          <Form className=\"signUpWrapper\">\r\n            <Field\r\n              type=\"text\"\r\n              label={labels.username}\r\n              name=\"userName\"\r\n              component={Input}\r\n            />\r\n            <Field\r\n              type=\"email\"\r\n              label={labels.email}\r\n              name=\"email\"\r\n              component={Input}\r\n            />\r\n            <Field\r\n              type=\"password\"\r\n              label={labels.password}\r\n              name=\"password\"\r\n              component={Input}\r\n            />\r\n            <Field\r\n              type=\"password\"\r\n              label={labels.confirmPassword}\r\n              name=\"confirmPassword\"\r\n              component={Input}\r\n            />\r\n            <Field\r\n              type=\"checkbox\"\r\n              label={labels.terms}\r\n              name=\"acceptedTerms\"\r\n              component={Input}\r\n            />\r\n            <button disabled={!isValid || isSubmitting} type=\"submit\">\r\n              Create My Account\r\n            </button>\r\n            {loading && (\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <LinearProgress />\r\n              </div>\r\n            )}\r\n            <div>\r\n              <Message error show={error}>\r\n                {NotificationManager.error({ error })}\r\n              </Message>\r\n            </div>\r\n          </Form>\r\n        </Modal>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  loading: auth.loading,\r\n  error: auth.error\r\n});\r\nconst mapDispatchToProps = {\r\n  signUp: signUp,\r\n  hideModal: () => hideModal()\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n"]},"metadata":{},"sourceType":"module"}