{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\cool-todo-list\\\\src\\\\components\\\\AddProject.js\";\nimport React, { useState } from \"react\";\nimport { firebase } from \"../firebase\";\nimport { generatePushId } from \"../helpers\";\nimport { useProjectsValue } from \"../context\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst AddProject = ({\n  shouldShow = false\n}) => {\n  const [show, setShow] = useState(shouldShow);\n  const [projectName, setProjectName] = useState(\"\");\n  const projectId = generatePushId();\n  const {\n    projects,\n    setProjects\n  } = useProjectsValue();\n\n  const addProject = () => projectName && firebase.firestore().collection(\"projects\").add({\n    projectId,\n    name: projectName,\n    userId: \"ffifg8347\"\n  }).then(() => {\n    setProjects([...projects]);\n    setProjectName(\"\");\n    setShow(false); //after submission, modal closes\n  });\n\n  return React.createElement(\"div\", {\n    className: \"add-project\",\n    \"data-testid\": \"add-project\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, show && React.createElement(\"div\", {\n    className: \"add-project__input\",\n    \"data-testid\": \"add-project-inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: projectName,\n    onChange: e => setProjectName(e.target.value),\n    className: \"add-project__name\",\n    \"data-testid\": \"project-name\",\n    type: \"text\",\n    placeholder: \"Name your project\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"add-project__submit\",\n    type: \"button\",\n    onClick: () => addProject(),\n    \"data-testid\": \"add-project-submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Add Project\"), React.createElement(\"span\", {\n    \"data-testid\": \"hide-project-overlay\",\n    className: \"add-project__cancel\",\n    onClick: () => setShow(false),\n    onKeyDown: () => setShow(false),\n    role: \"button\",\n    tabIndex: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Cancel\")), React.createElement(\"span\", {\n    className: \"add-project__plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"span\", {\n    \"aria-label\": \"Add Project\",\n    \"data-testid\": \"add-project-action\",\n    className: \"add-project-action\",\n    onClick: () => setShow(!show),\n    onKeyDown: () => setShow(!show),\n    role: \"button\",\n    tabIndex: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Add Project\"));\n};\n\nconst mapStateToProps = ({\n  firebase\n}) => ({\n  loggedIn: firebase.auth,\n  emailVerified: firebase.auth.emailVerified\n});\n\nexport default connect(mapStateToProps, null)(AddProject);\nAddProject.propTypes = {\n  shouldShow: PropTypes.bool\n};","map":{"version":3,"sources":["C:/Users/Owner/Documents/cool-todo-list/src/components/AddProject.js"],"names":["React","useState","firebase","generatePushId","useProjectsValue","PropTypes","connect","AddProject","shouldShow","show","setShow","projectName","setProjectName","projectId","projects","setProjects","addProject","firestore","collection","add","name","userId","then","e","target","value","mapStateToProps","loggedIn","auth","emailVerified","propTypes","bool"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { firebase } from \"../firebase\";\r\nimport { generatePushId } from \"../helpers\";\r\nimport { useProjectsValue } from \"../context\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AddProject = ({ shouldShow = false }) => {\r\n  const [show, setShow] = useState(shouldShow);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n\r\n  const projectId = generatePushId();\r\n  const { projects, setProjects } = useProjectsValue();\r\n\r\n  const addProject = () =>\r\n    projectName &&\r\n    firebase\r\n      .firestore()\r\n      .collection(\"projects\")\r\n      .add({\r\n        projectId,\r\n        name: projectName,\r\n        userId: \"ffifg8347\"\r\n      })\r\n      .then(() => {\r\n        setProjects([...projects]);\r\n        setProjectName(\"\");\r\n        setShow(false); //after submission, modal closes\r\n      });\r\n  return (\r\n    <div className=\"add-project\" data-testid=\"add-project\">\r\n      {show && (\r\n        <div className=\"add-project__input\" data-testid=\"add-project-inner\">\r\n          <input\r\n            value={projectName}\r\n            onChange={e => setProjectName(e.target.value)}\r\n            className=\"add-project__name\"\r\n            data-testid=\"project-name\"\r\n            type=\"text\"\r\n            placeholder=\"Name your project\"\r\n          />\r\n          <button\r\n            className=\"add-project__submit\"\r\n            type=\"button\"\r\n            onClick={() => addProject()}\r\n            data-testid=\"add-project-submit\"\r\n          >\r\n            Add Project\r\n          </button>\r\n          <span\r\n            data-testid=\"hide-project-overlay\"\r\n            className=\"add-project__cancel\"\r\n            onClick={() => setShow(false)}\r\n            onKeyDown={() => setShow(false)}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n          >\r\n            Cancel\r\n          </span>\r\n        </div>\r\n      )}\r\n      <span className=\"add-project__plus\">+</span>\r\n      <span\r\n        aria-label=\"Add Project\"\r\n        data-testid=\"add-project-action\"\r\n        className=\"add-project-action\"\r\n        onClick={() => setShow(!show)}\r\n        onKeyDown={() => setShow(!show)}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n      >\r\n        Add Project\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ firebase }) => ({\r\n  loggedIn: firebase.auth,\r\n  emailVerified: firebase.auth.emailVerified\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(AddProject);\r\n\r\nAddProject.propTypes = {\r\n  shouldShow: PropTypes.bool\r\n};\r\n"]},"metadata":{},"sourceType":"module"}