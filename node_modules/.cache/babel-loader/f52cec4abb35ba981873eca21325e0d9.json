{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\cool-todo-list\\\\src\\\\components\\\\TaskDate.js\";\nimport React, { useMemo } from \"react\";\nimport moment from \"moment\";\nimport { FaSpaceShuttle, FaSun, FaRegPaperPlane } from \"react-icons/fa\";\nimport PropTypes from \"prop-types\";\nexport const TaskDate = useMemo(({\n  setTaskDate,\n  showTaskDate,\n  setShowTaskDate\n}) => {\n  showTaskDate && React.createElement(\"div\", {\n    className: \"task-date\",\n    \"data-testid\": \"task-date-overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"task-date__list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"task-date__li\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: () => {\n      setShowTaskDate(false);\n      setTaskDate(moment().format(\"DD/MM/YYYY\"));\n    },\n    onKeyDown: () => {\n      setShowTaskDate(false);\n      setTaskDate(moment().format(\"DD/MM/YYYY\"));\n    },\n    \"data-testid\": \"task-date-overlay\",\n    role: \"button\",\n    \"aria-label\": \"Select today as the task date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(FaSpaceShuttle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Today\"))), React.createElement(\"li\", {\n    className: \"task-date__li\",\n    \"data-testid\": \"task-date-tomorrow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: () => {\n      setShowTaskDate(false);\n      setTaskDate(moment().add(1, \"day\").format(\"DD/MM/YYYY\"));\n    },\n    onKeyDown: () => {\n      setShowTaskDate(false);\n      setTaskDate(moment().add(1, \"day\").format(\"DD/MM/YYYY\"));\n    },\n    role: \"button\",\n    \"aria-label\": \"Select tomorrow as the task date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(FaSun, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Tomorrow\"))), React.createElement(\"li\", {\n    className: \"task-date__li\",\n    \"data-testid\": \"task-date-next-week\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: () => {\n      setShowTaskDate(false);\n      setTaskDate(moment().add(7, \"days\").format(\"DD/MM/YYYY\"));\n    },\n    onKeyDown: () => {\n      setShowTaskDate(false);\n      setTaskDate(moment().add(7, \"days\").format(\"DD/MM/YYYY\"));\n    },\n    role: \"button\",\n    \"aria-label\": \"Select next week as the task date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(FaRegPaperPlane, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Next Week\"))))), [setTaskDate, showTaskDate, setShowTaskDate];\n});\nTaskDate.propTypes = {\n  setTaskDate: PropTypes.func.isRequired,\n  showTaskDate: PropTypes.bool.isRequired,\n  setShowTaskDate: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["C:/Users/Owner/Documents/cool-todo-list/src/components/TaskDate.js"],"names":["React","useMemo","moment","FaSpaceShuttle","FaSun","FaRegPaperPlane","PropTypes","TaskDate","setTaskDate","showTaskDate","setShowTaskDate","format","add","propTypes","func","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport moment from \"moment\";\r\nimport { FaSpaceShuttle, FaSun, FaRegPaperPlane } from \"react-icons/fa\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const TaskDate = useMemo(\r\n  ({ setTaskDate, showTaskDate, setShowTaskDate }) => {\r\n    showTaskDate && (\r\n      <div className=\"task-date\" data-testid=\"task-date-overlay\">\r\n        <ul className=\"task-date__list\">\r\n          <li className=\"task-date__li\">\r\n            <div\r\n              onClick={() => {\r\n                setShowTaskDate(false);\r\n                setTaskDate(moment().format(\"DD/MM/YYYY\"));\r\n              }}\r\n              onKeyDown={() => {\r\n                setShowTaskDate(false);\r\n                setTaskDate(moment().format(\"DD/MM/YYYY\"));\r\n              }}\r\n              data-testid=\"task-date-overlay\"\r\n              role=\"button\"\r\n              aria-label=\"Select today as the task date\"\r\n            >\r\n              <span>\r\n                <FaSpaceShuttle />\r\n              </span>\r\n              <span>Today</span>\r\n            </div>\r\n          </li>\r\n          <li className=\"task-date__li\" data-testid=\"task-date-tomorrow\">\r\n            <div\r\n              onClick={() => {\r\n                setShowTaskDate(false);\r\n                setTaskDate(\r\n                  moment()\r\n                    .add(1, \"day\")\r\n                    .format(\"DD/MM/YYYY\")\r\n                );\r\n              }}\r\n              onKeyDown={() => {\r\n                setShowTaskDate(false);\r\n                setTaskDate(\r\n                  moment()\r\n                    .add(1, \"day\")\r\n                    .format(\"DD/MM/YYYY\")\r\n                );\r\n              }}\r\n              role=\"button\"\r\n              aria-label=\"Select tomorrow as the task date\"\r\n            >\r\n              <span>\r\n                <FaSun />\r\n              </span>\r\n              <span>Tomorrow</span>\r\n            </div>\r\n          </li>\r\n          <li className=\"task-date__li\" data-testid=\"task-date-next-week\">\r\n            <div\r\n              onClick={() => {\r\n                setShowTaskDate(false);\r\n                setTaskDate(\r\n                  moment()\r\n                    .add(7, \"days\")\r\n                    .format(\"DD/MM/YYYY\")\r\n                );\r\n              }}\r\n              onKeyDown={() => {\r\n                setShowTaskDate(false);\r\n                setTaskDate(\r\n                  moment()\r\n                    .add(7, \"days\")\r\n                    .format(\"DD/MM/YYYY\")\r\n                );\r\n              }}\r\n              role=\"button\"\r\n              aria-label=\"Select next week as the task date\"\r\n            >\r\n              <span>\r\n                <FaRegPaperPlane />\r\n              </span>\r\n              <span>Next Week</span>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    ),\r\n      [setTaskDate, showTaskDate, setShowTaskDate];\r\n  }\r\n);\r\n\r\nTaskDate.propTypes = {\r\n  setTaskDate: PropTypes.func.isRequired,\r\n  showTaskDate: PropTypes.bool.isRequired,\r\n  setShowTaskDate: PropTypes.func.isRequired\r\n};\r\n"]},"metadata":{},"sourceType":"module"}