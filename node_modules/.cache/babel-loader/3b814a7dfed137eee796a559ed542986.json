{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\cool-todo-list\\\\src\\\\components\\\\Auth\\\\Register.js\";\nimport React from \"react\"; // Redux\n\nimport { connect } from \"react-redux\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { labels } from \"../../constants/index\"; // Actions\n\nimport { signUp } from \"../../store/actions\";\nimport Input from \"../Forms/Input.js\";\nimport Message from \"../Message\";\nconst SignUpSchema = Yup.object().shape({\n  userName: Yup.string().required(\"You need a username silly!\").min(3, \"Too short\").max(25, \"Too long\"),\n  email: Yup.string().email(`email dosen't work :/`).required(\"You need an email silly!\"),\n  password: Yup.string().required(\"You need a password silly!\").min(8, \"Too short\"),\n  confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], `Password doesn't match`).required(\"You need to confirm your password\"),\n  acceptedTerms: Yup.boolean().required(\"Required\").oneOf([true], \"You must accept the terms and conditions\")\n});\n\nconst Register = ({\n  signUp,\n  loading,\n  error\n}) => {\n  return React.createElement(Formik, {\n    initialValues: {\n      userName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      acceptedTerms: false\n    },\n    validationSchema: SignUpSchema,\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      await signUp(values);\n      setSubmitting(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, ({\n    isSubmitting,\n    isValid\n  }) => //Creating a signup modal\n  React.createElement(\"div\", {\n    style: {\n      marginTop: \"240px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"text\",\n    label: labels.username,\n    name: \"userName\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"email\",\n    label: labels.email,\n    name: \"email\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"password\",\n    label: labels.password,\n    name: \"password\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"password\",\n    label: labels.confirmPassword,\n    name: \"confirmPassword\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"checkbox\",\n    label: labels.acceptedTerms,\n    name: \"acceptedTerms\",\n    component: Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    disabled: !isValid || isSubmitting,\n    loading: loading ? \"Signing up...\" : null,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Create My Account\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Message, {\n    error: true,\n    show: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, error))))));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  loading: auth.loading,\n  error: auth.error\n});\n\nconst mapDispatchToProps = {\n  signUp: signUp\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","map":{"version":3,"sources":["C:/Users/Owner/Documents/cool-todo-list/src/components/Auth/Register.js"],"names":["React","connect","Formik","Field","Form","Yup","labels","signUp","Input","Message","SignUpSchema","object","shape","userName","string","required","min","max","email","password","confirmPassword","oneOf","ref","acceptedTerms","boolean","Register","loading","error","values","setSubmitting","isSubmitting","isValid","marginTop","username","mapStateToProps","auth","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { labels } from \"../../constants/index\";\r\n// Actions\r\nimport { signUp } from \"../../store/actions\";\r\nimport Input from \"../Forms/Input.js\";\r\nimport Message from \"../Message\";\r\n\r\nconst SignUpSchema = Yup.object().shape({\r\n  userName: Yup.string()\r\n    .required(\"You need a username silly!\")\r\n    .min(3, \"Too short\")\r\n    .max(25, \"Too long\"),\r\n  email: Yup.string()\r\n    .email(`email dosen't work :/`)\r\n    .required(\"You need an email silly!\"),\r\n  password: Yup.string()\r\n    .required(\"You need a password silly!\")\r\n    .min(8, \"Too short\"),\r\n  confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref(\"password\"), null], `Password doesn't match`)\r\n    .required(\"You need to confirm your password\"),\r\n  acceptedTerms: Yup.boolean()\r\n    .required(\"Required\")\r\n    .oneOf([true], \"You must accept the terms and conditions\")\r\n});\r\n\r\nconst Register = ({ signUp, loading, error }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        userName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        acceptedTerms: false\r\n      }}\r\n      validationSchema={SignUpSchema}\r\n      onSubmit={async (values, { setSubmitting }) => {\r\n        await signUp(values);\r\n        setSubmitting(false);\r\n      }}\r\n    >\r\n      {({ isSubmitting, isValid }) => (\r\n        //Creating a signup modal\r\n        <div style={{ marginTop: \"240px\" }}>\r\n          <div>\r\n            <Form>\r\n              <Field\r\n                type=\"text\"\r\n                label={labels.username}\r\n                name=\"userName\"\r\n                component={Input}\r\n              />\r\n              <Field\r\n                type=\"email\"\r\n                label={labels.email}\r\n                name=\"email\"\r\n                component={Input}\r\n              />\r\n              <Field\r\n                type=\"password\"\r\n                label={labels.password}\r\n                name=\"password\"\r\n                component={Input}\r\n              />\r\n              <Field\r\n                type=\"password\"\r\n                label={labels.confirmPassword}\r\n                name=\"confirmPassword\"\r\n                component={Input}\r\n              />\r\n              <Field\r\n                type=\"checkbox\"\r\n                label={labels.acceptedTerms}\r\n                name=\"acceptedTerms\"\r\n                component={Input}\r\n              />\r\n              <button\r\n                disabled={!isValid || isSubmitting}\r\n                loading={loading ? \"Signing up...\" : null}\r\n                type=\"submit\"\r\n              >\r\n                Create My Account\r\n              </button>\r\n              <div>\r\n                <Message error show={error}>\r\n                  {error}\r\n                </Message>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  loading: auth.loading,\r\n  error: auth.error\r\n});\r\nconst mapDispatchToProps = {\r\n  signUp: signUp\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n"]},"metadata":{},"sourceType":"module"}