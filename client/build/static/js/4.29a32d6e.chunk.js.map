{"version":3,"sources":["components/IndividualProject.js","components/Projects.js","components/AddProject.js","components/layout/Sidebar.js","components/Checkbox.js","components/Tasks.js","components/layout/Content.js"],"names":["IndividualProject","project","useState","showConfirm","setShowConfirm","useProjectsValue","projects","setProjects","setSelectedProject","useSelectedProjectValue","console","log","className","name","data-testid","onClick","onKeyDown","tabIndex","role","aria-label","type","docId","firebase","firestore","collection","doc","delete","then","Projects","activeValue","active","setActive","map","key","projectId","data-doc-id","connect","loggedIn","auth","shouldShow","show","setShow","projectName","setProjectName","generatePushId","value","onChange","e","target","placeholder","add","userId","uid","Sidebar","showProjects","setShowProjects","undefined","Checkbox","id","taskDesc","archiveTask","update","archived","Tasks","selectedProject","tasks","useTasks","collatedTasksExist","getCollatedTitle","collatedTasks","length","getTitle","useEffect","document","title","task","AddTask","Content"],"mappings":"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","file":"static/js/4.29a32d6e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport { useProjectsValue, useSelectedProjectValue } from \"../context\";\r\nimport { firebase } from \"../firebase\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const IndividualProject = ({ project }) => {\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const { projects, setProjects } = useProjectsValue();\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n\r\n  console.log(\"showConfirm\", showConfirm);\r\n  const deleteProject = docId => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"projects\")\r\n      .doc(docId)\r\n      .delete()\r\n      .then(() => {\r\n        setProjects([...projects]);\r\n        setSelectedProject(\"INBOX\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span className=\"sidebar__dot\">âœ¦</span>\r\n      <span className=\"sidebar__project-name\">{project.name}</span>\r\n\r\n      <span\r\n        className=\"sidebar__project-delete\"\r\n        data-testid=\"delete-project\"\r\n        onClick={() => setShowConfirm(!showConfirm)}\r\n        onKeyDown={() => setShowConfirm(!showConfirm)}\r\n        tabIndex={0}\r\n        role=\"button\"\r\n        aria-label=\"Confirm deletionn of project\"\r\n      >\r\n        <FaTrashAlt />\r\n        {showConfirm && (\r\n          <div className=\"project-delete-modal\">\r\n            <div className=\"project-delete-modal__inner\">\r\n              <p>Are you sure you want to delete this project?</p>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => deleteProject(project.docId)}\r\n              >\r\n                Delete\r\n              </button>\r\n              <span\r\n                onClick={() => setShowConfirm(!showConfirm)}\r\n                onKeyDown={() => setShowConfirm(!showConfirm)}\r\n                tabIndex={0}\r\n                role=\"button\"\r\n                aria-label=\"Cancel adding project, do not delete\"\r\n              >\r\n                Cancel\r\n              </span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nIndividualProject.propTypes = {\r\n  project: PropTypes.object.isRequired\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelectedProjectValue, useProjectsValue } from \"../context\";\r\nimport { IndividualProject } from \"./IndividualProject\";\r\n\r\nexport const Projects = ({ activeValue = null }) => {\r\n  const [active, setActive] = useState(activeValue);\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n  const { projects } = useProjectsValue();\r\n\r\n  console.log(\"active\", active);\r\n\r\n  return (\r\n    projects &&\r\n    projects.map(project => (\r\n      <li\r\n        key={project.projectId}\r\n        data-testid=\"project-action-parent\"\r\n        data-doc-id={project.docId}\r\n        className={\r\n          active === project.projectId\r\n            ? \"active sidebar__project\"\r\n            : \"sidebar__project\"\r\n        }\r\n      >\r\n        <div\r\n          role=\"button\"\r\n          data-testid=\"project-action\"\r\n          tabIndex={0}\r\n          aria-label={`Select ${project.name} as the task project`}\r\n          onClick={() => {\r\n            setActive(project.projectId);\r\n            setSelectedProject(project.projectId);\r\n          }}\r\n          onKeyDown={() => {\r\n            setActive(project.projectId);\r\n            setSelectedProject(project.projectId);\r\n          }}\r\n        >\r\n          <IndividualProject project={project} />\r\n        </div>\r\n      </li>\r\n    ))\r\n  );\r\n};\r\n\r\nProjects.propTypes = {\r\n  activeValue: PropTypes.bool\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { firebase } from \"../firebase\";\r\nimport { generatePushId } from \"../helpers\";\r\nimport { useProjectsValue } from \"../context\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AddProject = ({ shouldShow = false, loggedIn }) => {\r\n  const [show, setShow] = useState(shouldShow);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n\r\n  const projectId = generatePushId();\r\n  const { projects, setProjects } = useProjectsValue();\r\n  console.log(\"loggedIn\", loggedIn);\r\n  const addProject = () =>\r\n    projectName &&\r\n    firebase\r\n      .firestore()\r\n      .collection(\"projects\")\r\n      .add({\r\n        projectId,\r\n        name: projectName,\r\n        userId: loggedIn.uid\r\n      })\r\n      .then(() => {\r\n        setProjects([...projects]);\r\n        setProjectName(\"\");\r\n        setShow(false); //after submission, modal closes\r\n      });\r\n  return (\r\n    <div className=\"add-project\" data-testid=\"add-project\">\r\n      {show && (\r\n        <div className=\"add-project__input\" data-testid=\"add-project-inner\">\r\n          <input\r\n            value={projectName}\r\n            onChange={e => setProjectName(e.target.value)}\r\n            className=\"add-project__name\"\r\n            data-testid=\"project-name\"\r\n            type=\"text\"\r\n            placeholder=\"Name your project\"\r\n          />\r\n          <button\r\n            className=\"add-project__submit\"\r\n            type=\"button\"\r\n            onClick={() => addProject()}\r\n            data-testid=\"add-project-submit\"\r\n          >\r\n            Add Project\r\n          </button>\r\n          <span\r\n            data-testid=\"hide-project-overlay\"\r\n            className=\"add-project__cancel\"\r\n            onClick={() => setShow(false)}\r\n            onKeyDown={() => setShow(false)}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n          >\r\n            Cancel\r\n          </span>\r\n        </div>\r\n      )}\r\n      <span className=\"add-project__plus\">+</span>\r\n      <span\r\n        aria-label=\"Add Project\"\r\n        data-testid=\"add-project-action\"\r\n        className=\"add-project-action\"\r\n        onClick={() => setShow(!show)}\r\n        onKeyDown={() => setShow(!show)}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n      >\r\n        Add Project\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ firebase }) => ({\r\n  loggedIn: firebase.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(AddProject);\r\n\r\nAddProject.propTypes = {\r\n  shouldShow: PropTypes.bool\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  FaChevronDown,\r\n  FaInbox,\r\n  FaRegCalendarAlt,\r\n  FaRegCalendar\r\n} from \"react-icons/fa\";\r\nimport { useSelectedProjectValue } from \"../../context\";\r\nimport { Projects } from \"../Projects\";\r\nimport AddProject from \"../AddProject\";\r\n\r\nconst Sidebar = () => {\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n  const [active, setActive] = useState(\"inbox\");\r\n  const [showProjects, setShowProjects] = useState(true);\r\n\r\n  return (\r\n    <div className=\"sidebar\" data-testid=\"sidebar\">\r\n      <ul className=\"sidebar__generic\">\r\n        <li\r\n          data-testid=\"inbox\"\r\n          className={active === \"inbox\" ? \"active\" : undefined}\r\n        >\r\n          <div\r\n            data-testid=\"inbox-action\"\r\n            onClick={() => {\r\n              setActive(\"inbox\");\r\n              setSelectedProject(\"INBOX\");\r\n            }}\r\n            onKeyDown={() => {\r\n              setActive(\"inbox\");\r\n              setSelectedProject(\"INBOX\");\r\n            }}\r\n            aria-label=\"Show tasks for Inbox\"\r\n          >\r\n            <span>\r\n              <FaInbox />\r\n            </span>\r\n\r\n            <span>Inbox</span>\r\n          </div>\r\n        </li>\r\n\r\n        <li\r\n          data-testid=\"inbox\"\r\n          className={active === \"today\" ? \"active\" : undefined}\r\n        >\r\n          <div\r\n            data-testid=\"inbox-action\"\r\n            onClick={() => {\r\n              setActive(\"today\");\r\n              setSelectedProject(\"TODAY\");\r\n            }}\r\n            onKeyDown={() => {\r\n              setActive(\"today\");\r\n              setSelectedProject(\"TODAY\");\r\n            }}\r\n            aria-label=\"Show tasks for today\"\r\n          >\r\n            <span>\r\n              <FaRegCalendar />\r\n            </span>\r\n\r\n            <span>Today</span>\r\n          </div>\r\n        </li>\r\n\r\n        <li\r\n          data-testid=\"inbox\"\r\n          className={active === \"next_7\" ? \"active\" : undefined}\r\n        >\r\n          <div\r\n            data-testid=\"inbox-action\"\r\n            onClick={() => {\r\n              setActive(\"next_7\");\r\n              setSelectedProject(\"NEXT_7\");\r\n            }}\r\n            onKeyDown={() => {\r\n              setActive(\"next_7\");\r\n              setSelectedProject(\"NEXT_7\");\r\n            }}\r\n            aria-label=\"Show tasks for next 7 Days\"\r\n          >\r\n            <span>\r\n              <FaRegCalendarAlt />\r\n            </span>\r\n            <span>Next 7 days</span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <div\r\n        className=\"sidebar__middle\"\r\n        onClick={() => setShowProjects(!showProjects)}\r\n        onKeyDown={() => setShowProjects(!showProjects)}\r\n        role=\"button\"\r\n        aria-label=\"show projects\"\r\n      >\r\n        <span>\r\n          <FaChevronDown\r\n            className={!showProjects ? \"hidden-projects\" : undefined}\r\n          />\r\n        </span>\r\n        <h2>Projects</h2>\r\n      </div>\r\n      <ul className=\"sidebar__projects\"> {showProjects && <Projects />}</ul>\r\n\r\n      {showProjects && <AddProject />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { firebase } from \"../firebase\";\r\n\r\nexport const Checkbox = ({ id, taskDesc }) => {\r\n  const archiveTask = () => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"tasks\")\r\n      .doc(id)\r\n      .update({\r\n        archived: true\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"checkbox-holder\"\r\n      data-testid=\"checkbox-action\"\r\n      onClick={() => archiveTask()}\r\n      onKeyDown={() => archiveTask()}\r\n      aria-label={`Mark ${taskDesc} as done?`}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n    >\r\n      <span className=\"checkbox\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckbox.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  taskDesc: PropTypes.string.isRequired\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Checkbox } from \"./Checkbox\";\r\nimport AddTask from \"./AddTask\";\r\nimport { useTasks, useFetchAPI } from \"../hooks\";\r\nimport { collatedTasks } from \"../constants\";\r\nimport { getTitle, getCollatedTitle, collatedTasksExist } from \"../helpers\";\r\nimport { useSelectedProjectValue, useProjectsValue } from \"../context\";\r\n\r\nexport const Tasks = () => {\r\n  const { selectedProject } = useSelectedProjectValue();\r\n  const { projects } = useProjectsValue();\r\n  const { tasks } = useTasks(selectedProject);\r\n\r\n  let projectName = \"\";\r\n\r\n  if (collatedTasksExist(selectedProject) && selectedProject) {\r\n    projectName = getCollatedTitle(collatedTasks, selectedProject).name;\r\n  }\r\n\r\n  if (\r\n    projects &&\r\n    projects.length > 0 &&\r\n    selectedProject &&\r\n    !collatedTasksExist(selectedProject)\r\n  ) {\r\n    projectName = getTitle(projects, selectedProject).name;\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${projectName}: Todoist`;\r\n  });\r\n\r\n  return (\r\n    <div className=\"tasks\" data-testid=\"tasks\">\r\n      <h2 data-testid=\"project-name\">{projectName}</h2>\r\n\r\n      <ul className=\"tasks__list\">\r\n        {tasks.map(task => (\r\n          <li key={`${task.id}`}>\r\n            <Checkbox id={task.id} taskDesc={task.task} />\r\n            <span>{task.task}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <AddTask />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { Tasks } from \"../Tasks\";\r\n\r\nconst Content = () => (\r\n  <section className=\"content\">\r\n    <Sidebar />\r\n    <Tasks />\r\n  </section>\r\n);\r\n\r\nexport default Content;\r\n"],"sourceRoot":""}