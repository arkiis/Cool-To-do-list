{"ast":null,"code":"import React from\"react\";import moment from\"moment\";import{FaSpaceShuttle,FaSun,FaRegPaperPlane}from\"react-icons/fa\";var TaskDate=function TaskDate(_ref){var setTaskDate=_ref.setTaskDate,showTaskDate=_ref.showTaskDate,setShowTaskDate=_ref.setShowTaskDate;return showTaskDate&&React.createElement(\"div\",{className:\"task-date\",\"data-testid\":\"task-date-overlay\"},React.createElement(\"ul\",{className:\"task-date__list\"},React.createElement(\"li\",{className:\"task-date__li\"},React.createElement(\"div\",{onClick:function onClick(){setShowTaskDate(false);setTaskDate(moment().format(\"DD/MM/YYYY\"));},onKeyDown:function onKeyDown(){setShowTaskDate(false);setTaskDate(moment().format(\"DD/MM/YYYY\"));},\"data-testid\":\"task-date-overlay\",role:\"button\",\"aria-label\":\"Select today as the task date\"},React.createElement(\"span\",null,React.createElement(FaSpaceShuttle,null)),React.createElement(\"span\",null,\"Today\"))),React.createElement(\"li\",{className:\"task-date__li\",\"data-testid\":\"task-date-tomorrow\"},React.createElement(\"div\",{onClick:function onClick(){setShowTaskDate(false);setTaskDate(moment().add(1,\"day\").format(\"DD/MM/YYYY\"));},onKeyDown:function onKeyDown(){setShowTaskDate(false);setTaskDate(moment().add(1,\"day\").format(\"DD/MM/YYYY\"));},role:\"button\",\"aria-label\":\"Select tomorrow as the task date\"},React.createElement(\"span\",null,React.createElement(FaSun,null)),React.createElement(\"span\",null,\"Tomorrow\"))),React.createElement(\"li\",{className:\"task-date__li\",\"data-testid\":\"task-date-next-week\"},React.createElement(\"div\",{onClick:function onClick(){setShowTaskDate(false);setTaskDate(moment().add(7,\"days\").format(\"DD/MM/YYYY\"));},onKeyDown:function onKeyDown(){setShowTaskDate(false);setTaskDate(moment().add(7,\"days\").format(\"DD/MM/YYYY\"));},role:\"button\",\"aria-label\":\"Select next week as the task date\"},React.createElement(\"span\",null,React.createElement(FaRegPaperPlane,null)),React.createElement(\"span\",null,\"Next Week\")))));};export default React.memo(TaskDate);","map":{"version":3,"sources":["C:/Users/Owner/Documents/cool-todo-list/client/src/components/TaskDate.js"],"names":["React","moment","FaSpaceShuttle","FaSun","FaRegPaperPlane","TaskDate","setTaskDate","showTaskDate","setShowTaskDate","format","add","memo"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,OAASC,cAAT,CAAyBC,KAAzB,CAAgCC,eAAhC,KAAuD,gBAAvD,CAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,UAAGC,CAAAA,WAAH,MAAGA,WAAH,CAAgBC,YAAhB,MAAgBA,YAAhB,CAA8BC,eAA9B,MAA8BA,eAA9B,OACfD,CAAAA,YAAY,EACV,2BAAK,SAAS,CAAC,WAAf,CAA2B,cAAY,mBAAvC,EACE,0BAAI,SAAS,CAAC,iBAAd,EACE,0BAAI,SAAS,CAAC,eAAd,EACE,2BACE,OAAO,CAAE,kBAAM,CACbC,eAAe,CAAC,KAAD,CAAf,CACAF,WAAW,CAACL,MAAM,GAAGQ,MAAT,CAAgB,YAAhB,CAAD,CAAX,CACD,CAJH,CAKE,SAAS,CAAE,oBAAM,CACfD,eAAe,CAAC,KAAD,CAAf,CACAF,WAAW,CAACL,MAAM,GAAGQ,MAAT,CAAgB,YAAhB,CAAD,CAAX,CACD,CARH,CASE,cAAY,mBATd,CAUE,IAAI,CAAC,QAVP,CAWE,aAAW,+BAXb,EAaE,gCACE,oBAAC,cAAD,MADF,CAbF,CAgBE,wCAhBF,CADF,CADF,CAqBE,0BAAI,SAAS,CAAC,eAAd,CAA8B,cAAY,oBAA1C,EACE,2BACE,OAAO,CAAE,kBAAM,CACbD,eAAe,CAAC,KAAD,CAAf,CACAF,WAAW,CACTL,MAAM,GACHS,GADH,CACO,CADP,CACU,KADV,EAEGD,MAFH,CAEU,YAFV,CADS,CAAX,CAKD,CARH,CASE,SAAS,CAAE,oBAAM,CACfD,eAAe,CAAC,KAAD,CAAf,CACAF,WAAW,CACTL,MAAM,GACHS,GADH,CACO,CADP,CACU,KADV,EAEGD,MAFH,CAEU,YAFV,CADS,CAAX,CAKD,CAhBH,CAiBE,IAAI,CAAC,QAjBP,CAkBE,aAAW,kCAlBb,EAoBE,gCACE,oBAAC,KAAD,MADF,CApBF,CAuBE,2CAvBF,CADF,CArBF,CAgDE,0BAAI,SAAS,CAAC,eAAd,CAA8B,cAAY,qBAA1C,EACE,2BACE,OAAO,CAAE,kBAAM,CACbD,eAAe,CAAC,KAAD,CAAf,CACAF,WAAW,CACTL,MAAM,GACHS,GADH,CACO,CADP,CACU,MADV,EAEGD,MAFH,CAEU,YAFV,CADS,CAAX,CAKD,CARH,CASE,SAAS,CAAE,oBAAM,CACfD,eAAe,CAAC,KAAD,CAAf,CACAF,WAAW,CACTL,MAAM,GACHS,GADH,CACO,CADP,CACU,MADV,EAEGD,MAFH,CAEU,YAFV,CADS,CAAX,CAKD,CAhBH,CAiBE,IAAI,CAAC,QAjBP,CAkBE,aAAW,mCAlBb,EAoBE,gCACE,oBAAC,eAAD,MADF,CApBF,CAuBE,4CAvBF,CADF,CAhDF,CADF,CAFa,EAAjB,CAkFA,cAAeT,CAAAA,KAAK,CAACW,IAAN,CAAWN,QAAX,CAAf","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { FaSpaceShuttle, FaSun, FaRegPaperPlane } from \"react-icons/fa\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TaskDate = ({ setTaskDate, showTaskDate, setShowTaskDate }) =>\r\n  showTaskDate && (\r\n    <div className=\"task-date\" data-testid=\"task-date-overlay\">\r\n      <ul className=\"task-date__list\">\r\n        <li className=\"task-date__li\">\r\n          <div\r\n            onClick={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(moment().format(\"DD/MM/YYYY\"));\r\n            }}\r\n            onKeyDown={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(moment().format(\"DD/MM/YYYY\"));\r\n            }}\r\n            data-testid=\"task-date-overlay\"\r\n            role=\"button\"\r\n            aria-label=\"Select today as the task date\"\r\n          >\r\n            <span>\r\n              <FaSpaceShuttle />\r\n            </span>\r\n            <span>Today</span>\r\n          </div>\r\n        </li>\r\n        <li className=\"task-date__li\" data-testid=\"task-date-tomorrow\">\r\n          <div\r\n            onClick={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(\r\n                moment()\r\n                  .add(1, \"day\")\r\n                  .format(\"DD/MM/YYYY\")\r\n              );\r\n            }}\r\n            onKeyDown={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(\r\n                moment()\r\n                  .add(1, \"day\")\r\n                  .format(\"DD/MM/YYYY\")\r\n              );\r\n            }}\r\n            role=\"button\"\r\n            aria-label=\"Select tomorrow as the task date\"\r\n          >\r\n            <span>\r\n              <FaSun />\r\n            </span>\r\n            <span>Tomorrow</span>\r\n          </div>\r\n        </li>\r\n        <li className=\"task-date__li\" data-testid=\"task-date-next-week\">\r\n          <div\r\n            onClick={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(\r\n                moment()\r\n                  .add(7, \"days\")\r\n                  .format(\"DD/MM/YYYY\")\r\n              );\r\n            }}\r\n            onKeyDown={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(\r\n                moment()\r\n                  .add(7, \"days\")\r\n                  .format(\"DD/MM/YYYY\")\r\n              );\r\n            }}\r\n            role=\"button\"\r\n            aria-label=\"Select next week as the task date\"\r\n          >\r\n            <span>\r\n              <FaRegPaperPlane />\r\n            </span>\r\n            <span>Next Week</span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\nexport default React.memo(TaskDate);\r\n\r\nTaskDate.propTypes = {\r\n  setTaskDate: PropTypes.func.isRequired,\r\n  showTaskDate: PropTypes.bool.isRequired,\r\n  setShowTaskDate: PropTypes.func.isRequired\r\n};\r\n"]},"metadata":{},"sourceType":"module"}