{"ast":null,"code":"import{collatedTasks}from\"../constants\";export var getTitle=function getTitle(projects,projectId){return projects.find(function(project){return project.projectId===projectId;});};export var getCollatedTitle=function getCollatedTitle(projects,key){return projects.find(function(project){return project.key===key;});};export var collatedTasksExist=function collatedTasksExist(selectedProject){return collatedTasks.find(function(task){return task.key===selectedProject;});};export var getSingleLetter=function getSingleLetter(name){var final=[];var arr=name.split(\"\");if(arr[0]){final.push(arr[0]);}else{return null;}return final;};export var generatePushId=function(){var PUSH_CHARS=\"-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\";var lastRandChars=[];return function(){var now=new Date().getTime();var timeStampChars=new Array(8);for(var i=7;i>=0;i--){timeStampChars[i]=PUSH_CHARS.charAt(now%64);now=Math.floor(now/64);}var id=timeStampChars.join(\"\");for(i=0;i<12;i++){id+=PUSH_CHARS.charAt(lastRandChars[i]);}return id;};}();","map":{"version":3,"sources":["C:/Users/Owner/Documents/cool-todo-list/client/src/helpers/index.js"],"names":["collatedTasks","getTitle","projects","projectId","find","project","getCollatedTitle","key","collatedTasksExist","selectedProject","task","getSingleLetter","name","final","arr","split","push","generatePushId","PUSH_CHARS","lastRandChars","now","Date","getTime","timeStampChars","Array","i","charAt","Math","floor","id","join"],"mappings":"AAAA,OAASA,aAAT,KAA8B,cAA9B,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAWC,SAAX,QACtBD,CAAAA,QAAQ,CAACE,IAAT,CAAc,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACF,SAAR,GAAsBA,SAA1B,EAArB,CADsB,EAAjB,CAGP,MAAO,IAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACJ,QAAD,CAAWK,GAAX,QAC9BL,CAAAA,QAAQ,CAACE,IAAT,CAAc,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACE,GAAR,GAAgBA,GAApB,EAArB,CAD8B,EAAzB,CAGP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,eAAe,QAC/CT,CAAAA,aAAa,CAACI,IAAd,CAAmB,SAAAM,IAAI,QAAIA,CAAAA,IAAI,CAACH,GAAL,GAAaE,eAAjB,EAAvB,CAD+C,EAA1C,CAGP,MAAO,IAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,IAAI,CAAI,CACrC,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CAEA,GAAIC,CAAAA,GAAG,CAAGF,IAAI,CAACG,KAAL,CAAW,EAAX,CAAV,CAEA,GAAID,GAAG,CAAC,CAAD,CAAP,CAAY,CACVD,KAAK,CAACG,IAAN,CAAWF,GAAG,CAAC,CAAD,CAAd,EACD,CAFD,IAEO,CACL,MAAO,KAAP,CACD,CACD,MAAOD,CAAAA,KAAP,CACD,CAXM,CAaP,MAAO,IAAMI,CAAAA,cAAc,CAAI,UAAM,CACnC,GAAMC,CAAAA,UAAU,CACd,kEADF,CAGA,GAAMC,CAAAA,aAAa,CAAG,EAAtB,CAEA,MAAO,WAAW,CAChB,GAAIC,CAAAA,GAAG,CAAG,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EAAV,CAEA,GAAMC,CAAAA,cAAc,CAAG,GAAIC,CAAAA,KAAJ,CAAU,CAAV,CAAvB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAI,CAArB,CAAwBA,CAAC,EAAzB,CAA6B,CAC3BF,cAAc,CAACE,CAAD,CAAd,CAAoBP,UAAU,CAACQ,MAAX,CAAkBN,GAAG,CAAG,EAAxB,CAApB,CACAA,GAAG,CAAGO,IAAI,CAACC,KAAL,CAAWR,GAAG,CAAG,EAAjB,CAAN,CACD,CAED,GAAIS,CAAAA,EAAE,CAAGN,cAAc,CAACO,IAAf,CAAoB,EAApB,CAAT,CAEA,IAAKL,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAG,EAAhB,CAAoBA,CAAC,EAArB,CAAyB,CACvBI,EAAE,EAAIX,UAAU,CAACQ,MAAX,CAAkBP,aAAa,CAACM,CAAD,CAA/B,CAAN,CACD,CAED,MAAOI,CAAAA,EAAP,CACD,CAhBD,CAiBD,CAvB6B,EAAvB","sourcesContent":["import { collatedTasks } from \"../constants\";\r\n\r\nexport const getTitle = (projects, projectId) =>\r\n  projects.find(project => project.projectId === projectId);\r\n\r\nexport const getCollatedTitle = (projects, key) =>\r\n  projects.find(project => project.key === key);\r\n\r\nexport const collatedTasksExist = selectedProject =>\r\n  collatedTasks.find(task => task.key === selectedProject);\r\n\r\nexport const getSingleLetter = name => {\r\n  let final = [];\r\n\r\n  let arr = name.split(\"\");\r\n\r\n  if (arr[0]) {\r\n    final.push(arr[0]);\r\n  } else {\r\n    return null;\r\n  }\r\n  return final;\r\n};\r\n\r\nexport const generatePushId = (() => {\r\n  const PUSH_CHARS =\r\n    \"-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\";\r\n\r\n  const lastRandChars = [];\r\n\r\n  return function() {\r\n    let now = new Date().getTime();\r\n\r\n    const timeStampChars = new Array(8);\r\n    for (var i = 7; i >= 0; i--) {\r\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n      now = Math.floor(now / 64);\r\n    }\r\n\r\n    let id = timeStampChars.join(\"\");\r\n\r\n    for (i = 0; i < 12; i++) {\r\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n    }\r\n\r\n    return id;\r\n  };\r\n})();\r\n"]},"metadata":{},"sourceType":"module"}