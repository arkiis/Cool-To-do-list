{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\cool-todo-list\\\\client\\\\src\\\\components\\\\AddTask.js\";\nimport React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { firebase } from \"../firebase\";\nimport { FaRegListAlt, FaRegCalendarAlt } from \"react-icons/fa\";\nimport { useSelectedProjectValue } from \"../context\";\nimport ProjectOverlay from \"./ProjectOverlay\";\nimport TaskDate from \"./TaskDate\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst AddTask = ({\n  showAddTaskMain = true,\n  shouldShowMain = false,\n  showQuickAddTask,\n  setShowQuickAddTask,\n  loggedIn\n}) => {\n  const [task, setTask] = useState(\"\");\n  const [taskDate, setTaskDate] = useState(\"\");\n  const [project, setProject] = useState(\"\");\n  const [showMain, setShowMain] = useState(shouldShowMain);\n  const [showProjectOverlay, setShowProjectOverlay] = useState(false);\n  const [showTaskDate, setShowTaskDate] = useState(false);\n  const {\n    selectedProject\n  } = useSelectedProjectValue(); //inspect selectedProject *need to understand better\n\n  const addTask = () => {\n    const projectId = project || selectedProject;\n    let collatedDate = \"\";\n\n    if (projectId === \"TODAY\") {\n      collatedDate = moment().format(\"DD/MM/YYYY\");\n    } else if (projectId === \"NEXT_7\") {\n      collatedDate = moment().add(7, \"days\").format(\"DD/MM/YYYY\");\n    }\n\n    console.log(project, \"addTasksssss\");\n    return task && projectId && firebase.firestore().collection(\"tasks\").add({\n      archived: false,\n      projectId,\n      task,\n      date: collatedDate || taskDate,\n      userId: loggedIn.uid\n    }).then(() => {\n      setTask(\"\");\n      setProject(\"\");\n      setShowMain(\"\");\n      setShowProjectOverlay(false);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: showQuickAddTask ? \"add-task add-task__overlay\" : \"add-task\",\n    \"data-testid\": \"add-task-comp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, showAddTaskMain && React.createElement(\"div\", {\n    className: \"add-task__shallow\",\n    \"data-testid\": \"show-main-action\",\n    onClick: () => setShowMain(!showMain),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"add-task__plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"span\", {\n    className: \"add-task__text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Add Task\")), (showMain || showQuickAddTask) && React.createElement(\"div\", {\n    className: \"add-task__main\",\n    \"data-testid\": \"add-task-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, showQuickAddTask && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    \"data-testid\": \"quick-add-task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Quick Add Task\"), React.createElement(\"span\", {\n    className: \"add-task__cancel-x\",\n    \"data-testid\": \"add-task-quick-cancel\",\n    \"aria-label\": \"Cancel adding task\",\n    onClick: () => {\n      setShowMain(false);\n      setShowProjectOverlay(false);\n      setShowQuickAddTask(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"X\"))), React.createElement(ProjectOverlay, {\n    setProject: setProject,\n    showProjectOverlay: showProjectOverlay,\n    setShowProjectOverlay: setShowProjectOverlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(TaskDate, {\n    setTaskDate: setTaskDate,\n    showTaskDate: showTaskDate,\n    setShowTaskDate: setShowTaskDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"add-task__content\",\n    \"data-testid\": \"add-task-content\",\n    type: \"text\",\n    \"aria-label\": \"Enter your task\",\n    onChange: e => setTask(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"added-project\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, project && React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, project.name), taskDate && React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, taskDate)), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"add-task__submit\",\n    \"data-testid\": \"add-task\",\n    onClick: () => showQuickAddTask ? addTask() && setShowQuickAddTask(false) : addTask(),\n    onKeyDown: () => showQuickAddTask ? addTask() && setShowQuickAddTask(false) : addTask(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Add Task\"), !showQuickAddTask && React.createElement(\"span\", {\n    className: \"add-task__cancel\",\n    \"data-testid\": \"add-task-main-cancel\",\n    onClick: () => {\n      setShowMain(false);\n      setShowProjectOverlay(false);\n    },\n    \"aria-label\": \"Cancel adding a task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"span\", {\n    className: \"add-task__project\",\n    \"data-testid\": \"show-project-overlay\",\n    onClick: () => setShowProjectOverlay(!showProjectOverlay),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(FaRegListAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: \"add-task__date\",\n    \"data-testid\": \"show-task-date-overlay\",\n    onClick: () => setShowTaskDate(!showTaskDate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(FaRegCalendarAlt, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = ({\n  firebase\n}) => ({\n  loggedIn: firebase.auth\n});\n\nexport default connect(mapStateToProps, null)(AddTask);\nAddTask.propTypes = {\n  showAddTaskMain: PropTypes.bool,\n  shouldShowMain: PropTypes.bool,\n  showQuickAddTask: PropTypes.bool,\n  setShowQuickAddTask: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/Owner/Documents/cool-todo-list/client/src/components/AddTask.js"],"names":["React","useState","moment","firebase","FaRegListAlt","FaRegCalendarAlt","useSelectedProjectValue","ProjectOverlay","TaskDate","PropTypes","connect","AddTask","showAddTaskMain","shouldShowMain","showQuickAddTask","setShowQuickAddTask","loggedIn","task","setTask","taskDate","setTaskDate","project","setProject","showMain","setShowMain","showProjectOverlay","setShowProjectOverlay","showTaskDate","setShowTaskDate","selectedProject","addTask","projectId","collatedDate","format","add","console","log","firestore","collection","archived","date","userId","uid","then","e","target","value","name","mapStateToProps","auth","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { firebase } from \"../firebase\";\r\nimport { FaRegListAlt, FaRegCalendarAlt } from \"react-icons/fa\";\r\nimport { useSelectedProjectValue } from \"../context\";\r\nimport ProjectOverlay from \"./ProjectOverlay\";\r\nimport TaskDate from \"./TaskDate\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AddTask = ({\r\n  showAddTaskMain = true,\r\n  shouldShowMain = false,\r\n  showQuickAddTask,\r\n  setShowQuickAddTask,\r\n  loggedIn\r\n}) => {\r\n  const [task, setTask] = useState(\"\");\r\n  const [taskDate, setTaskDate] = useState(\"\");\r\n  const [project, setProject] = useState(\"\");\r\n  const [showMain, setShowMain] = useState(shouldShowMain);\r\n  const [showProjectOverlay, setShowProjectOverlay] = useState(false);\r\n  const [showTaskDate, setShowTaskDate] = useState(false);\r\n\r\n  const { selectedProject } = useSelectedProjectValue();\r\n  //inspect selectedProject *need to understand better\r\n\r\n  const addTask = () => {\r\n    const projectId = project || selectedProject;\r\n    let collatedDate = \"\";\r\n\r\n    if (projectId === \"TODAY\") {\r\n      collatedDate = moment().format(\"DD/MM/YYYY\");\r\n    } else if (projectId === \"NEXT_7\") {\r\n      collatedDate = moment()\r\n        .add(7, \"days\")\r\n        .format(\"DD/MM/YYYY\");\r\n    }\r\n    console.log(project, \"addTasksssss\");\r\n    return (\r\n      task &&\r\n      projectId &&\r\n      firebase\r\n        .firestore()\r\n        .collection(\"tasks\")\r\n        .add({\r\n          archived: false,\r\n          projectId,\r\n          task,\r\n          date: collatedDate || taskDate,\r\n          userId: loggedIn.uid\r\n        })\r\n        .then(() => {\r\n          setTask(\"\");\r\n          setProject(\"\");\r\n          setShowMain(\"\");\r\n          setShowProjectOverlay(false);\r\n        })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={showQuickAddTask ? \"add-task add-task__overlay\" : \"add-task\"}\r\n      data-testid=\"add-task-comp\"\r\n    >\r\n      {showAddTaskMain && (\r\n        <div\r\n          className=\"add-task__shallow\"\r\n          data-testid=\"show-main-action\"\r\n          onClick={() => setShowMain(!showMain)}\r\n        >\r\n          <span className=\"add-task__plus\">+</span>\r\n          <span className=\"add-task__text\">Add Task</span>\r\n        </div>\r\n      )}\r\n\r\n      {(showMain || showQuickAddTask) && (\r\n        <div className=\"add-task__main\" data-testid=\"add-task-main\">\r\n          {showQuickAddTask && (\r\n            <>\r\n              <div data-testid=\"quick-add-task\">\r\n                <h2 className=\"header\">Quick Add Task</h2>\r\n                <span\r\n                  className=\"add-task__cancel-x\"\r\n                  data-testid=\"add-task-quick-cancel\"\r\n                  aria-label=\"Cancel adding task\"\r\n                  onClick={() => {\r\n                    setShowMain(false);\r\n                    setShowProjectOverlay(false);\r\n                    setShowQuickAddTask(false);\r\n                  }}\r\n                >\r\n                  X\r\n                </span>\r\n              </div>\r\n            </>\r\n          )}\r\n          <ProjectOverlay\r\n            setProject={setProject}\r\n            showProjectOverlay={showProjectOverlay}\r\n            setShowProjectOverlay={setShowProjectOverlay}\r\n          />\r\n          <TaskDate\r\n            setTaskDate={setTaskDate}\r\n            showTaskDate={showTaskDate}\r\n            setShowTaskDate={setShowTaskDate}\r\n          />\r\n          <input\r\n            className=\"add-task__content\"\r\n            data-testid=\"add-task-content\"\r\n            type=\"text\"\r\n            aria-label=\"Enter your task\"\r\n            onChange={e => setTask(e.target.value)}\r\n          />\r\n\r\n          <div className=\"added-project\">\r\n            {project && <h1>{project.name}</h1>}\r\n\r\n            {taskDate && <h1>{taskDate}</h1>}\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"add-task__submit\"\r\n            data-testid=\"add-task\"\r\n            onClick={() =>\r\n              showQuickAddTask\r\n                ? addTask() && setShowQuickAddTask(false)\r\n                : addTask()\r\n            }\r\n            onKeyDown={() =>\r\n              showQuickAddTask\r\n                ? addTask() && setShowQuickAddTask(false)\r\n                : addTask()\r\n            }\r\n          >\r\n            Add Task\r\n          </button>\r\n          {!showQuickAddTask && (\r\n            <span\r\n              className=\"add-task__cancel\"\r\n              data-testid=\"add-task-main-cancel\"\r\n              onClick={() => {\r\n                setShowMain(false);\r\n                setShowProjectOverlay(false);\r\n              }}\r\n              aria-label=\"Cancel adding a task\"\r\n            >\r\n              Cancel\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"add-task__project\"\r\n            data-testid=\"show-project-overlay\"\r\n            onClick={() => setShowProjectOverlay(!showProjectOverlay)}\r\n          >\r\n            <FaRegListAlt />\r\n          </span>\r\n          <span\r\n            className=\"add-task__date\"\r\n            data-testid=\"show-task-date-overlay\"\r\n            onClick={() => setShowTaskDate(!showTaskDate)}\r\n          >\r\n            <FaRegCalendarAlt />\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ firebase }) => ({\r\n  loggedIn: firebase.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(AddTask);\r\n\r\nAddTask.propTypes = {\r\n  showAddTaskMain: PropTypes.bool,\r\n  shouldShowMain: PropTypes.bool,\r\n  showQuickAddTask: PropTypes.bool,\r\n  setShowQuickAddTask: PropTypes.func\r\n};\r\n"]},"metadata":{},"sourceType":"module"}