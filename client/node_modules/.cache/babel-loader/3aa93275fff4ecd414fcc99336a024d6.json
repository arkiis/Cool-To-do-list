{"ast":null,"code":"import React,{useEffect}from\"react\";import{Checkbox}from\"./Checkbox\";import AddTask from\"./AddTask\";import{useTasks,useFetchAPI}from\"../hooks\";import{collatedTasks}from\"../constants\";import{getTitle,getCollatedTitle,collatedTasksExist}from\"../helpers\";import{useSelectedProjectValue,useProjectsValue}from\"../context\";export var Tasks=function Tasks(){var _useSelectedProjectVa=useSelectedProjectValue(),selectedProject=_useSelectedProjectVa.selectedProject;var _useProjectsValue=useProjectsValue(),projects=_useProjectsValue.projects;var _useTasks=useTasks(selectedProject),tasks=_useTasks.tasks;var projectName=\"\";if(collatedTasksExist(selectedProject)&&selectedProject){projectName=getCollatedTitle(collatedTasks,selectedProject).name;}if(projects&&projects.length>0&&selectedProject&&!collatedTasksExist(selectedProject)){projectName=getTitle(projects,selectedProject).name;}useEffect(function(){document.title=\"\".concat(projectName,\": Todoist\");});return React.createElement(\"div\",{className:\"tasks\",\"data-testid\":\"tasks\"},React.createElement(\"h2\",{\"data-testid\":\"project-name\"},projectName),React.createElement(\"ul\",{className:\"tasks__list\"},tasks.map(function(task){return React.createElement(\"li\",{key:\"\".concat(task.id)},React.createElement(Checkbox,{id:task.id,taskDesc:task.task}),React.createElement(\"span\",null,task.task));})),React.createElement(AddTask,null));};","map":{"version":3,"sources":["C:/Users/Owner/Documents/cool-todo-list/client/src/components/Tasks.js"],"names":["React","useEffect","Checkbox","AddTask","useTasks","useFetchAPI","collatedTasks","getTitle","getCollatedTitle","collatedTasksExist","useSelectedProjectValue","useProjectsValue","Tasks","selectedProject","projects","tasks","projectName","name","length","document","title","map","task","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,QAAT,KAAyB,YAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,QAAT,CAAmBC,WAAnB,KAAsC,UAAtC,CACA,OAASC,aAAT,KAA8B,cAA9B,CACA,OAASC,QAAT,CAAmBC,gBAAnB,CAAqCC,kBAArC,KAA+D,YAA/D,CACA,OAASC,uBAAT,CAAkCC,gBAAlC,KAA0D,YAA1D,CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,2BACGF,uBAAuB,EAD1B,CACjBG,eADiB,uBACjBA,eADiB,uBAEJF,gBAAgB,EAFZ,CAEjBG,QAFiB,mBAEjBA,QAFiB,eAGPV,QAAQ,CAACS,eAAD,CAHD,CAGjBE,KAHiB,WAGjBA,KAHiB,CAKzB,GAAIC,CAAAA,WAAW,CAAG,EAAlB,CAEA,GAAIP,kBAAkB,CAACI,eAAD,CAAlB,EAAuCA,eAA3C,CAA4D,CAC1DG,WAAW,CAAGR,gBAAgB,CAACF,aAAD,CAAgBO,eAAhB,CAAhB,CAAiDI,IAA/D,CACD,CAED,GACEH,QAAQ,EACRA,QAAQ,CAACI,MAAT,CAAkB,CADlB,EAEAL,eAFA,EAGA,CAACJ,kBAAkB,CAACI,eAAD,CAJrB,CAKE,CACAG,WAAW,CAAGT,QAAQ,CAACO,QAAD,CAAWD,eAAX,CAAR,CAAoCI,IAAlD,CACD,CAEDhB,SAAS,CAAC,UAAM,CACdkB,QAAQ,CAACC,KAAT,WAAoBJ,WAApB,cACD,CAFQ,CAAT,CAIA,MACE,4BAAK,SAAS,CAAC,OAAf,CAAuB,cAAY,OAAnC,EACE,0BAAI,cAAY,cAAhB,EAAgCA,WAAhC,CADF,CAGE,0BAAI,SAAS,CAAC,aAAd,EACGD,KAAK,CAACM,GAAN,CAAU,SAAAC,IAAI,QACb,2BAAI,GAAG,WAAKA,IAAI,CAACC,EAAV,CAAP,EACE,oBAAC,QAAD,EAAU,EAAE,CAAED,IAAI,CAACC,EAAnB,CAAuB,QAAQ,CAAED,IAAI,CAACA,IAAtC,EADF,CAEE,gCAAOA,IAAI,CAACA,IAAZ,CAFF,CADa,EAAd,CADH,CAHF,CAYE,oBAAC,OAAD,MAZF,CADF,CAgBD,CAxCM","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Checkbox } from \"./Checkbox\";\r\nimport AddTask from \"./AddTask\";\r\nimport { useTasks, useFetchAPI } from \"../hooks\";\r\nimport { collatedTasks } from \"../constants\";\r\nimport { getTitle, getCollatedTitle, collatedTasksExist } from \"../helpers\";\r\nimport { useSelectedProjectValue, useProjectsValue } from \"../context\";\r\n\r\nexport const Tasks = () => {\r\n  const { selectedProject } = useSelectedProjectValue();\r\n  const { projects } = useProjectsValue();\r\n  const { tasks } = useTasks(selectedProject);\r\n\r\n  let projectName = \"\";\r\n\r\n  if (collatedTasksExist(selectedProject) && selectedProject) {\r\n    projectName = getCollatedTitle(collatedTasks, selectedProject).name;\r\n  }\r\n\r\n  if (\r\n    projects &&\r\n    projects.length > 0 &&\r\n    selectedProject &&\r\n    !collatedTasksExist(selectedProject)\r\n  ) {\r\n    projectName = getTitle(projects, selectedProject).name;\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${projectName}: Todoist`;\r\n  });\r\n\r\n  return (\r\n    <div className=\"tasks\" data-testid=\"tasks\">\r\n      <h2 data-testid=\"project-name\">{projectName}</h2>\r\n\r\n      <ul className=\"tasks__list\">\r\n        {tasks.map(task => (\r\n          <li key={`${task.id}`}>\r\n            <Checkbox id={task.id} taskDesc={task.task} />\r\n            <span>{task.task}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <AddTask />\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}