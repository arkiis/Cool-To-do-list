{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Owner\\\\Documents\\\\cool-todo-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Owner\\\\Documents\\\\cool-todo-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React,{useEffect}from\"react\";// Redux\nimport{connect}from\"react-redux\";import{NotificationManager}from\"react-notifications\";import LinearProgress from\"@material-ui/core/LinearProgress\";import{Formik,Field,Form}from\"formik\";import*as Yup from\"yup\";import{labels}from\"../../constants/index\";// Actions\nimport{signUp,clean}from\"../../store/actions\";import{hideModal as _hideModal}from\"../../store/actions/ModalActions\";import Input from\"../Forms/Input.js\";import Message from\"../Message\";import Modal from\"../Modal\";var SignUpSchema=Yup.object().shape({userName:Yup.string().required(\"You need a username silly!\").min(3,\"Too short\").max(25,\"Too long\"),email:Yup.string().email(\"email dosen't work :/\").required(\"You need an email silly!\"),password:Yup.string().required(\"You need a password silly!\").min(8,\"Too short\"),confirmPassword:Yup.string().oneOf([Yup.ref(\"password\"),null],\"Password doesn't match\").required(\"You need to confirm your password\"),acceptedTerms:Yup.boolean().required(\"Required\").oneOf([true],\"You must accept the terms and conditions\")});var Register=function Register(_ref){var signUp=_ref.signUp,loading=_ref.loading,error=_ref.error,hideModal=_ref.hideModal,cleanUp=_ref.cleanUp;useEffect(function(){return function(){cleanUp();};},[cleanUp]);var onClose=function onClose(){hideModal();};var onSubmit=function onSubmit(){hideModal();};return React.createElement(Formik,{initialValues:{userName:\"\",email:\"\",password:\"\",confirmPassword:\"\",acceptedTerms:false},validationSchema:SignUpSchema,onSubmit:/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref3){var setSubmitting;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setSubmitting=_ref3.setSubmitting;_context.next=3;return signUp(values);case 3:setSubmitting(false);onSubmit();case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}()},function(_ref4){var isSubmitting=_ref4.isSubmitting,isValid=_ref4.isValid;return(//Creating a signup modal\nReact.createElement(Modal,{title:\"Sign up\",onClose:onClose},React.createElement(Form,{className:\"signUpWrapper\"},React.createElement(Field,{type:\"text\",label:labels.username,name:\"userName\",component:Input}),React.createElement(Field,{type:\"email\",label:labels.email,name:\"email\",component:Input}),React.createElement(Field,{type:\"password\",label:labels.password,name:\"password\",component:Input}),React.createElement(Field,{type:\"password\",label:labels.confirmPassword,name:\"confirmPassword\",component:Input}),React.createElement(\"div\",{className:\"authCheckbox\"},React.createElement(Field,{type:\"checkbox\",label:labels.terms,name:\"acceptedTerms\",component:Input})),React.createElement(\"button\",{disabled:!isValid||isSubmitting,type:\"submit\"},\"Create My Account\"),loading&&React.createElement(\"div\",{style:{textAlign:\"center\"}},React.createElement(LinearProgress,null)),React.createElement(\"div\",null,React.createElement(Message,{error:true,show:error},NotificationManager.error({error:error}))))));});};var mapStateToProps=function mapStateToProps(_ref5){var auth=_ref5.auth;return{loading:auth.loading,error:auth.error};};var mapDispatchToProps={signUp:signUp,hideModal:function hideModal(){return _hideModal();},cleanUp:clean};export default connect(mapStateToProps,mapDispatchToProps)(Register);","map":{"version":3,"sources":["C:/Users/Owner/Documents/cool-todo-list/client/src/components/Auth/Register.js"],"names":["React","useEffect","connect","NotificationManager","LinearProgress","Formik","Field","Form","Yup","labels","signUp","clean","hideModal","Input","Message","Modal","SignUpSchema","object","shape","userName","string","required","min","max","email","password","confirmPassword","oneOf","ref","acceptedTerms","boolean","Register","loading","error","cleanUp","onClose","onSubmit","values","setSubmitting","isSubmitting","isValid","username","terms","textAlign","mapStateToProps","auth","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { labels } from \"../../constants/index\";\r\n// Actions\r\nimport { signUp, clean } from \"../../store/actions\";\r\nimport { hideModal } from \"../../store/actions/ModalActions\";\r\nimport Input from \"../Forms/Input.js\";\r\nimport Message from \"../Message\";\r\nimport Modal from \"../Modal\";\r\n\r\nconst SignUpSchema = Yup.object().shape({\r\n  userName: Yup.string()\r\n    .required(\"You need a username silly!\")\r\n    .min(3, \"Too short\")\r\n    .max(25, \"Too long\"),\r\n  email: Yup.string()\r\n    .email(`email dosen't work :/`)\r\n    .required(\"You need an email silly!\"),\r\n  password: Yup.string()\r\n    .required(\"You need a password silly!\")\r\n    .min(8, \"Too short\"),\r\n  confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref(\"password\"), null], `Password doesn't match`)\r\n    .required(\"You need to confirm your password\"),\r\n  acceptedTerms: Yup.boolean()\r\n    .required(\"Required\")\r\n    .oneOf([true], \"You must accept the terms and conditions\")\r\n});\r\n\r\nconst Register = ({ signUp, loading, error, hideModal, cleanUp }) => {\r\n  useEffect(() => {\r\n    return () => {\r\n      cleanUp();\r\n    };\r\n  }, [cleanUp]);\r\n\r\n  const onClose = () => {\r\n    hideModal();\r\n  };\r\n  const onSubmit = () => {\r\n    hideModal();\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        userName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        acceptedTerms: false\r\n      }}\r\n      validationSchema={SignUpSchema}\r\n      onSubmit={async (values, { setSubmitting }) => {\r\n        await signUp(values);\r\n        setSubmitting(false);\r\n        onSubmit();\r\n      }}\r\n    >\r\n      {({ isSubmitting, isValid }) => (\r\n        //Creating a signup modal\r\n        <Modal title=\"Sign up\" onClose={onClose}>\r\n          <Form className=\"signUpWrapper\">\r\n            <Field\r\n              type=\"text\"\r\n              label={labels.username}\r\n              name=\"userName\"\r\n              component={Input}\r\n            />\r\n            <Field\r\n              type=\"email\"\r\n              label={labels.email}\r\n              name=\"email\"\r\n              component={Input}\r\n            />\r\n            <Field\r\n              type=\"password\"\r\n              label={labels.password}\r\n              name=\"password\"\r\n              component={Input}\r\n            />\r\n            <Field\r\n              type=\"password\"\r\n              label={labels.confirmPassword}\r\n              name=\"confirmPassword\"\r\n              component={Input}\r\n            />\r\n            <div className=\"authCheckbox\">\r\n              <Field\r\n                type=\"checkbox\"\r\n                label={labels.terms}\r\n                name=\"acceptedTerms\"\r\n                component={Input}\r\n              />\r\n            </div>\r\n\r\n            <button disabled={!isValid || isSubmitting} type=\"submit\">\r\n              Create My Account\r\n            </button>\r\n            {loading && (\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <LinearProgress />\r\n              </div>\r\n            )}\r\n            <div>\r\n              <Message error show={error}>\r\n                {NotificationManager.error({ error })}\r\n              </Message>\r\n            </div>\r\n          </Form>\r\n        </Modal>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  loading: auth.loading,\r\n  error: auth.error\r\n});\r\nconst mapDispatchToProps = {\r\n  signUp: signUp,\r\n  hideModal: () => hideModal(),\r\n  cleanUp: clean\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n"]},"metadata":{},"sourceType":"module"}