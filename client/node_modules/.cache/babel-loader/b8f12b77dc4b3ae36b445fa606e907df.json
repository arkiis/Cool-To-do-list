{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\cool-todo-list\\\\client\\\\src\\\\components\\\\Projects.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelectedProjectValue, useProjectsValue } from \"../context\";\nimport { IndividualProject } from \"./IndividualProject\";\nexport const Projects = ({\n  activeValue = null\n}) => {\n  const [active, setActive] = useState(activeValue);\n  const {\n    setSelectedProject\n  } = useSelectedProjectValue();\n  const {\n    projects\n  } = useProjectsValue();\n  console.log(\"active\", active);\n  return projects && projects.map(project => React.createElement(\"li\", {\n    key: project.projectId,\n    \"data-testid\": \"project-action-parent\",\n    \"data-doc-id\": project.docId,\n    className: active === project.projectId ? \"active sidebar__project\" : \"sidebar__project\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    role: \"button\",\n    \"data-testid\": \"project-action\",\n    tabIndex: 0,\n    \"aria-label\": `Select ${project.name} as the task project`,\n    onClick: () => {\n      setActive(project.projectId);\n      setSelectedProject(project.projectId);\n    },\n    onKeyDown: () => {\n      setActive(project.projectId);\n      setSelectedProject(project.projectId);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(IndividualProject, {\n    project: project,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))));\n};\nProjects.propTypes = {\n  activeValue: PropTypes.bool\n};","map":{"version":3,"sources":["C:/Users/Owner/Documents/cool-todo-list/client/src/components/Projects.js"],"names":["React","useState","PropTypes","useSelectedProjectValue","useProjectsValue","IndividualProject","Projects","activeValue","active","setActive","setSelectedProject","projects","console","log","map","project","projectId","docId","name","propTypes","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,uBAAT,EAAkCC,gBAAlC,QAA0D,YAA1D;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,WAAW,GAAG;AAAhB,CAAD,KAA4B;AAClD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAACM,WAAD,CAApC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAyBP,uBAAuB,EAAtD;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAeP,gBAAgB,EAArC;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,MAAtB;AAEA,SACEG,QAAQ,IACRA,QAAQ,CAACG,GAAT,CAAaC,OAAO,IAClB;AACE,IAAA,GAAG,EAAEA,OAAO,CAACC,SADf;AAEE,mBAAY,uBAFd;AAGE,mBAAaD,OAAO,CAACE,KAHvB;AAIE,IAAA,SAAS,EACPT,MAAM,KAAKO,OAAO,CAACC,SAAnB,GACI,yBADJ,GAEI,kBAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,mBAAY,gBAFd;AAGE,IAAA,QAAQ,EAAE,CAHZ;AAIE,kBAAa,UAASD,OAAO,CAACG,IAAK,sBAJrC;AAKE,IAAA,OAAO,EAAE,MAAM;AACbT,MAAAA,SAAS,CAACM,OAAO,CAACC,SAAT,CAAT;AACAN,MAAAA,kBAAkB,CAACK,OAAO,CAACC,SAAT,CAAlB;AACD,KARH;AASE,IAAA,SAAS,EAAE,MAAM;AACfP,MAAAA,SAAS,CAACM,OAAO,CAACC,SAAT,CAAT;AACAN,MAAAA,kBAAkB,CAACK,OAAO,CAACC,SAAT,CAAlB;AACD,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcE,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAED,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CAVF,CADF,CAFF;AAgCD,CAvCM;AAyCPT,QAAQ,CAACa,SAAT,GAAqB;AACnBZ,EAAAA,WAAW,EAAEL,SAAS,CAACkB;AADJ,CAArB","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelectedProjectValue, useProjectsValue } from \"../context\";\r\nimport { IndividualProject } from \"./IndividualProject\";\r\n\r\nexport const Projects = ({ activeValue = null }) => {\r\n  const [active, setActive] = useState(activeValue);\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n  const { projects } = useProjectsValue();\r\n\r\n  console.log(\"active\", active);\r\n\r\n  return (\r\n    projects &&\r\n    projects.map(project => (\r\n      <li\r\n        key={project.projectId}\r\n        data-testid=\"project-action-parent\"\r\n        data-doc-id={project.docId}\r\n        className={\r\n          active === project.projectId\r\n            ? \"active sidebar__project\"\r\n            : \"sidebar__project\"\r\n        }\r\n      >\r\n        <div\r\n          role=\"button\"\r\n          data-testid=\"project-action\"\r\n          tabIndex={0}\r\n          aria-label={`Select ${project.name} as the task project`}\r\n          onClick={() => {\r\n            setActive(project.projectId);\r\n            setSelectedProject(project.projectId);\r\n          }}\r\n          onKeyDown={() => {\r\n            setActive(project.projectId);\r\n            setSelectedProject(project.projectId);\r\n          }}\r\n        >\r\n          <IndividualProject project={project} />\r\n        </div>\r\n      </li>\r\n    ))\r\n  );\r\n};\r\n\r\nProjects.propTypes = {\r\n  activeValue: PropTypes.bool\r\n};\r\n"]},"metadata":{},"sourceType":"module"}