{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Owner\\\\Documents\\\\cool-todo-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Owner\\\\Documents\\\\cool-todo-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"C:\\\\Users\\\\Owner\\\\Documents\\\\cool-todo-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\Owner\\\\Documents\\\\cool-todo-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";/* eslint-disable no-nested-ternary */import{useState,useEffect}from\"react\";import moment from\"moment\";import{firebase}from\"../firebase\";import{collatedTasksExist}from\"../helpers\";export var useTasks=function useTasks(selectedProject){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),archivedTasks=_useState4[0],setArchivedTasks=_useState4[1];useEffect(function(){var userId;if(firebase.auth().currentUser&&firebase.auth().currentUser.uid!==null){userId=firebase.auth().currentUser.uid;}else{userId=\"12435\";}var unsubscribe=firebase.firestore().collection(\"tasks\").where(\"userId\",\"==\",userId);unsubscribe=selectedProject&&!collatedTasksExist(selectedProject)?unsubscribe=unsubscribe.where(\"projectId\",\"==\",selectedProject):selectedProject===\"TODAY\"?unsubscribe=unsubscribe.where(\"date\",\"==\",moment().format(\"DD/MM/YYYY\")):selectedProject===\"INBOX\"||selectedProject===0?unsubscribe=unsubscribe.where(\"date\",\"==\",\"\"):unsubscribe;unsubscribe=unsubscribe.onSnapshot(function(snapshot){var newTasks=snapshot.docs.map(function(task){return _objectSpread({id:task.id},task.data());});setTasks(selectedProject===\"NEXT_7\"?newTasks.filter(function(task){return moment(task.date,\"DD-MM-YYYY\").diff(moment(),\"days\")<=7&&task.archived!==true;}):newTasks.filter(function(task){return task.archived!==true;}));setArchivedTasks(newTasks.filter(function(task){return task.archived!==false;}));});return function(){return unsubscribe();};},[selectedProject]);return{tasks:tasks,archivedTasks:archivedTasks};};export var useProjects=function useProjects(){var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),projects=_useState6[0],setProjects=_useState6[1];if(firebase.auth().currentUser!==null)console.log(\"user id: \"+firebase.auth().currentUser.uid);useEffect(function(){var userId;if(firebase.auth().currentUser&&firebase.auth().currentUser.uid!==null){userId=firebase.auth().currentUser.uid;}else{userId=\"12435\";}firebase.firestore().collection(\"projects\").where(\"userId\",\"==\",userId).orderBy(\"projectId\").get().then(function(snapshot){var allProjects=snapshot.docs.map(function(project){return _objectSpread({},project.data(),{docId:project.id});});if(JSON.stringify(allProjects)!==JSON.stringify(projects)){setProjects(allProjects);}});},[projects]);return{projects:projects,setProjects:setProjects};};//Fetch hook\nexport var useFetchAPI=function useFetchAPI(endpoint){var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),value=_useState8[0],setValue=_useState8[1];useEffect(function(){fetching();},[fetching]);var fetching=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var endpointValue,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(endpoint);case 2:endpointValue=_context.sent;_context.next=5;return endpointValue.json();case 5:response=_context.sent;setValue(response);case 7:case\"end\":return _context.stop();}}},_callee);}));return function fetching(){return _ref.apply(this,arguments);};}();return value;};","map":{"version":3,"sources":["C:/Users/Owner/Documents/cool-todo-list/client/src/hooks/index.js"],"names":["useState","useEffect","moment","firebase","collatedTasksExist","useTasks","selectedProject","tasks","setTasks","archivedTasks","setArchivedTasks","userId","auth","currentUser","uid","unsubscribe","firestore","collection","where","format","onSnapshot","snapshot","newTasks","docs","map","task","id","data","filter","date","diff","archived","useProjects","projects","setProjects","console","log","orderBy","get","then","allProjects","project","docId","JSON","stringify","useFetchAPI","endpoint","value","setValue","fetching","fetch","endpointValue","json","response"],"mappings":"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","sourcesContent":["/* eslint-disable no-nested-ternary */\r\nimport { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { firebase } from \"../firebase\";\r\nimport { collatedTasksExist } from \"../helpers\";\r\n\r\nexport const useTasks = selectedProject => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [archivedTasks, setArchivedTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let userId;\r\n    if (\r\n      firebase.auth().currentUser &&\r\n      firebase.auth().currentUser.uid !== null\r\n    ) {\r\n      userId = firebase.auth().currentUser.uid;\r\n    } else {\r\n      userId = \"12435\";\r\n    }\r\n    let unsubscribe = firebase\r\n      .firestore()\r\n      .collection(\"tasks\")\r\n      .where(\"userId\", \"==\", userId);\r\n\r\n    unsubscribe =\r\n      selectedProject && !collatedTasksExist(selectedProject)\r\n        ? (unsubscribe = unsubscribe.where(\"projectId\", \"==\", selectedProject))\r\n        : selectedProject === \"TODAY\"\r\n        ? (unsubscribe = unsubscribe.where(\r\n            \"date\",\r\n            \"==\",\r\n            moment().format(\"DD/MM/YYYY\")\r\n          ))\r\n        : selectedProject === \"INBOX\" || selectedProject === 0\r\n        ? (unsubscribe = unsubscribe.where(\"date\", \"==\", \"\"))\r\n        : unsubscribe;\r\n\r\n    unsubscribe = unsubscribe.onSnapshot(snapshot => {\r\n      const newTasks = snapshot.docs.map(task => ({\r\n        id: task.id,\r\n        ...task.data()\r\n      }));\r\n\r\n      setTasks(\r\n        selectedProject === \"NEXT_7\"\r\n          ? newTasks.filter(\r\n              task =>\r\n                moment(task.date, \"DD-MM-YYYY\").diff(moment(), \"days\") <= 7 &&\r\n                task.archived !== true\r\n            )\r\n          : newTasks.filter(task => task.archived !== true)\r\n      );\r\n      setArchivedTasks(newTasks.filter(task => task.archived !== false));\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [selectedProject]);\r\n\r\n  return { tasks, archivedTasks };\r\n};\r\n\r\nexport const useProjects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  if (firebase.auth().currentUser !== null)\r\n    console.log(\"user id: \" + firebase.auth().currentUser.uid);\r\n\r\n  useEffect(() => {\r\n    let userId;\r\n    if (\r\n      firebase.auth().currentUser &&\r\n      firebase.auth().currentUser.uid !== null\r\n    ) {\r\n      userId = firebase.auth().currentUser.uid;\r\n    } else {\r\n      userId = \"12435\";\r\n    }\r\n    firebase\r\n      .firestore()\r\n      .collection(\"projects\")\r\n      .where(\"userId\", \"==\", userId)\r\n      .orderBy(\"projectId\")\r\n      .get()\r\n      .then(snapshot => {\r\n        const allProjects = snapshot.docs.map(project => ({\r\n          ...project.data(),\r\n          docId: project.id\r\n        }));\r\n\r\n        if (JSON.stringify(allProjects) !== JSON.stringify(projects)) {\r\n          setProjects(allProjects);\r\n        }\r\n      });\r\n  }, [projects]);\r\n\r\n  return { projects, setProjects };\r\n};\r\n\r\n//Fetch hook\r\nexport const useFetchAPI = endpoint => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetching();\r\n  }, [fetching]);\r\n\r\n  const fetching = async () => {\r\n    let endpointValue = await fetch(endpoint);\r\n    let response = await endpointValue.json();\r\n    setValue(response);\r\n  };\r\n\r\n  return value;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}