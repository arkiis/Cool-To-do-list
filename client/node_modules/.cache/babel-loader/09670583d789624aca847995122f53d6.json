{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Owner\\\\Documents\\\\cool-todo-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{FaMoon,FaSun}from\"react-icons/fa\";import Logo from\"../Logo\";import AddTask from\"../AddTask\";import NavLinks from\"../NavLinks\";import{connect}from\"react-redux\";import{showModal as _showModal}from\"../../store/actions/ModalActions\";import{LOGIN_MODAL,SIGNUP_MODAL}from\"../../store/actions/type\";import Dropdown from\"../Dropdown\";import{firebase}from\"../../firebase\";import Hamburger from\"../Hamburger\";import HeaderSidebar from\"./HeaderSidebar\";var Header=function Header(_ref){var darkMode=_ref.darkMode,setDarkMode=_ref.setDarkMode,loggedIn=_ref.loggedIn,showModal=_ref.showModal,emailVerified=_ref.emailVerified;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),shouldShowMain=_useState2[0],setShouldShowMain=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showQuickAddTask=_useState4[0],setShowQuickAddTask=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showHeaderSidebar=_useState6[0],setShowHeaderSidebar=_useState6[1];var links;var showSideMenu=function showSideMenu(){setShowHeaderSidebar(!showHeaderSidebar);};var closeSidebar=function closeSidebar(e){if(e.target.id===\"sidebar\"){showSideMenu();}};var showLoginMenu=function showLoginMenu(){setShowHeaderSidebar(!showHeaderSidebar);showModal(LOGIN_MODAL);};var showSignupMenu=function showSignupMenu(){setShowHeaderSidebar(!showHeaderSidebar);showModal(SIGNUP_MODAL);};if(loggedIn.uid){console.log(\"loggedIn.uid\",loggedIn);console.log(\"firebase\",firebase);links=React.createElement(React.Fragment,null,React.createElement(\"li\",{\"data-testid\":\"quick-add-task-action\",className:\"settings__add\"},React.createElement(\"button\",{\"aria-label\":\"Quick Add Task\",onClick:function onClick(){setShowQuickAddTask(true);setShouldShowMain(true);},onKeyDown:function onKeyDown(){setShowQuickAddTask(true);setShouldShowMain(true);}},\"+\")),React.createElement(\"li\",{\"data-testid\":\"dark-mode-action\",className:\"settings__darkmode\"},React.createElement(\"button\",{\"aria-label\":\"Darkmode on/off\",type:\"button\",onClick:function onClick(){return setDarkMode(!darkMode);},onKeyDown:function onKeyDown(){return setDarkMode(!darkMode);}},darkMode?React.createElement(FaSun,null):React.createElement(FaMoon,null))),React.createElement(Dropdown,null),React.createElement(AddTask,{showAddTaskMain:false,shouldShowMain:shouldShowMain,showQuickAddTask:showQuickAddTask,setShowQuickAddTask:setShowQuickAddTask}));}else{links=React.createElement(React.Fragment,null,React.createElement(NavLinks,{link:\"/premium\"},\"Premium\"),React.createElement(NavLinks,{clicked:showLoginMenu},\"Login\"),React.createElement(NavLinks,{clicked:showSignupMenu},\"Signup\"));}return loggedIn.uid&&!emailVerified?null:React.createElement(React.Fragment,null,React.createElement(\"header\",{className:\"header\",\"data-testid\":\"header\"},React.createElement(\"nav\",null,React.createElement(Logo,{loggedIn:loggedIn}),React.createElement(\"div\",{className:\"settings\"},React.createElement(\"ul\",{className:\"\".concat(!loggedIn.uid?\"linksWrapper\":\"\")},links),!loggedIn.uid&&React.createElement(Hamburger,{showSideMenu:showSideMenu}))),React.createElement(\"div\",{id:\"sidebar\",onClick:function onClick(e){return closeSidebar(e);},className:\"\".concat(showHeaderSidebar&&\"headerSidebarOverlay\")},!loggedIn.uid&&React.createElement(HeaderSidebar,{links:links,showHeaderSidebar:showHeaderSidebar}))));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{showModal:function showModal(modelType){return dispatch(_showModal(modelType));}};};export default connect(null,mapDispatchToProps)(Header);","map":{"version":3,"sources":["C:/Users/Owner/Documents/cool-todo-list/client/src/components/layout/Header.js"],"names":["React","useState","useEffect","FaMoon","FaSun","Logo","AddTask","NavLinks","connect","showModal","LOGIN_MODAL","SIGNUP_MODAL","Dropdown","firebase","Hamburger","HeaderSidebar","Header","darkMode","setDarkMode","loggedIn","emailVerified","shouldShowMain","setShouldShowMain","showQuickAddTask","setShowQuickAddTask","showHeaderSidebar","setShowHeaderSidebar","links","showSideMenu","closeSidebar","e","target","id","showLoginMenu","showSignupMenu","uid","console","log","mapDispatchToProps","dispatch","modelType"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FaMoon, FaSun } from \"react-icons/fa\";\r\nimport PropTypes from \"prop-types\";\r\nimport Logo from \"../Logo\";\r\nimport AddTask from \"../AddTask\";\r\nimport NavLinks from \"../NavLinks\";\r\nimport { connect } from \"react-redux\";\r\nimport { showModal } from \"../../store/actions/ModalActions\";\r\nimport { LOGIN_MODAL, SIGNUP_MODAL } from \"../../store/actions/type\";\r\nimport Dropdown from \"../Dropdown\";\r\nimport { firebase } from \"../../firebase\";\r\nimport Hamburger from \"../Hamburger\";\r\nimport HeaderSidebar from \"./HeaderSidebar\";\r\nconst Header = ({\r\n  darkMode,\r\n  setDarkMode,\r\n  loggedIn,\r\n  showModal,\r\n  emailVerified\r\n}) => {\r\n  const [shouldShowMain, setShouldShowMain] = useState(false);\r\n  const [showQuickAddTask, setShowQuickAddTask] = useState(false);\r\n  const [showHeaderSidebar, setShowHeaderSidebar] = useState(false);\r\n\r\n  let links;\r\n\r\n  const showSideMenu = () => {\r\n    setShowHeaderSidebar(!showHeaderSidebar);\r\n  };\r\n  const closeSidebar = e => {\r\n    if (e.target.id === \"sidebar\") {\r\n      showSideMenu();\r\n    }\r\n  };\r\n\r\n  const showLoginMenu = () => {\r\n    setShowHeaderSidebar(!showHeaderSidebar);\r\n    showModal(LOGIN_MODAL);\r\n  };\r\n  const showSignupMenu = () => {\r\n    setShowHeaderSidebar(!showHeaderSidebar);\r\n    showModal(SIGNUP_MODAL);\r\n  };\r\n\r\n  if (loggedIn.uid) {\r\n    console.log(\"loggedIn.uid\", loggedIn);\r\n    console.log(\"firebase\", firebase);\r\n    links = (\r\n      <>\r\n        <li data-testid=\"quick-add-task-action\" className=\"settings__add\">\r\n          <button\r\n            aria-label=\"Quick Add Task\"\r\n            onClick={() => {\r\n              setShowQuickAddTask(true);\r\n              setShouldShowMain(true);\r\n            }}\r\n            onKeyDown={() => {\r\n              setShowQuickAddTask(true);\r\n              setShouldShowMain(true);\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n        </li>\r\n\r\n        <li data-testid=\"dark-mode-action\" className=\"settings__darkmode\">\r\n          <button\r\n            aria-label=\"Darkmode on/off\"\r\n            type=\"button\"\r\n            onClick={() => setDarkMode(!darkMode)}\r\n            onKeyDown={() => setDarkMode(!darkMode)}\r\n          >\r\n            {darkMode ? <FaSun /> : <FaMoon />}\r\n          </button>\r\n        </li>\r\n\r\n        <Dropdown />\r\n\r\n        <AddTask\r\n          showAddTaskMain={false}\r\n          shouldShowMain={shouldShowMain}\r\n          showQuickAddTask={showQuickAddTask}\r\n          setShowQuickAddTask={setShowQuickAddTask}\r\n        />\r\n      </>\r\n    );\r\n  } else {\r\n    links = (\r\n      <>\r\n        <NavLinks link=\"/premium\">Premium</NavLinks>\r\n        <NavLinks clicked={showLoginMenu}>Login</NavLinks>\r\n        <NavLinks clicked={showSignupMenu}>Signup</NavLinks>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return loggedIn.uid && !emailVerified ? null : (\r\n    <>\r\n      <header className=\"header\" data-testid=\"header\">\r\n        <nav>\r\n          <Logo loggedIn={loggedIn} />\r\n          <div className=\"settings\">\r\n            <ul className={`${!loggedIn.uid ? \"linksWrapper\" : \"\"}`}>\r\n              {links}\r\n            </ul>\r\n            {!loggedIn.uid && <Hamburger showSideMenu={showSideMenu} />}\r\n          </div>\r\n        </nav>\r\n        <div\r\n          id=\"sidebar\"\r\n          onClick={e => closeSidebar(e)}\r\n          className={`${showHeaderSidebar && \"headerSidebarOverlay\"}`}\r\n        >\r\n          {!loggedIn.uid && (\r\n            <HeaderSidebar\r\n              links={links}\r\n              showHeaderSidebar={showHeaderSidebar}\r\n            />\r\n          )}\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  showModal: modelType => dispatch(showModal(modelType))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Header);\r\n\r\nHeader.propTypes = {\r\n  darkMode: PropTypes.bool.isRequired,\r\n  setDarkMode: PropTypes.func.isRequired\r\n};\r\n"]},"metadata":{},"sourceType":"module"}