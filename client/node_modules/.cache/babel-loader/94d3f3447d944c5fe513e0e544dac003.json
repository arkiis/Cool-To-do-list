{"ast":null,"code":"/* eslint-disable no-nested-ternary */\nimport { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { firebase } from \"../firebase\";\nimport { collatedTasksExist } from \"../helpers\";\nexport const useTasks = selectedProject => {\n  const [tasks, setTasks] = useState([]);\n  const [archivedTasks, setArchivedTasks] = useState([]);\n  useEffect(() => {\n    let userId;\n\n    if (firebase.auth().currentUser && firebase.auth().currentUser.uid !== null) {\n      userId = firebase.auth().currentUser.uid;\n    } else {\n      userId = \"12435\";\n    }\n\n    let unsubscribe = firebase.firestore().collection(\"tasks\").where(\"userId\", \"==\", userId);\n    unsubscribe = selectedProject && !collatedTasksExist(selectedProject) ? unsubscribe = unsubscribe.where(\"projectId\", \"==\", selectedProject) : selectedProject === \"TODAY\" ? unsubscribe = unsubscribe.where(\"date\", \"==\", moment().format(\"DD/MM/YYYY\")) : selectedProject === \"INBOX\" || selectedProject === 0 ? unsubscribe = unsubscribe.where(\"date\", \"==\", \"\") : unsubscribe;\n    unsubscribe = unsubscribe.onSnapshot(snapshot => {\n      const newTasks = snapshot.docs.map(task => ({\n        id: task.id,\n        ...task.data()\n      }));\n      setTasks(selectedProject === \"NEXT_7\" ? newTasks.filter(task => moment(task.date, \"DD-MM-YYYY\").diff(moment(), \"days\") <= 7 && task.archived !== true) : newTasks.filter(task => task.archived !== true));\n      setArchivedTasks(newTasks.filter(task => task.archived !== false));\n    });\n    return () => unsubscribe();\n  }, [selectedProject]);\n  return {\n    tasks,\n    archivedTasks\n  };\n};\nexport const useProjects = () => {\n  const [projects, setProjects] = useState([]);\n  if (firebase.auth().currentUser !== null) console.log(\"user id: \" + firebase.auth().currentUser.uid);\n  useEffect(() => {\n    let userId;\n\n    if (firebase.auth().currentUser && firebase.auth().currentUser.uid !== null) {\n      userId = firebase.auth().currentUser.uid;\n    } else {\n      userId = \"12435\";\n    }\n\n    firebase.firestore().collection(\"projects\").where(\"userId\", \"==\", userId).orderBy(\"projectId\").get().then(snapshot => {\n      const allProjects = snapshot.docs.map(project => ({ ...project.data(),\n        docId: project.id\n      }));\n\n      if (JSON.stringify(allProjects) !== JSON.stringify(projects)) {\n        setProjects(allProjects);\n      }\n    });\n  }, [projects]);\n  return {\n    projects,\n    setProjects\n  };\n}; //Fetch hook\n\nexport const useFetchAPI = endpoint => {\n  const [value, setValue] = useState([]);\n  useEffect(() => {\n    fetching();\n  }, [fetching]);\n\n  const fetching = async () => {\n    let endpointValue = await fetch(endpoint);\n    let response = await endpointValue.json();\n    setValue(response);\n  };\n\n  return value;\n};","map":{"version":3,"sources":["C:/Users/Owner/Documents/cool-todo-list/client/src/hooks/index.js"],"names":["useState","useEffect","moment","firebase","collatedTasksExist","useTasks","selectedProject","tasks","setTasks","archivedTasks","setArchivedTasks","userId","auth","currentUser","uid","unsubscribe","firestore","collection","where","format","onSnapshot","snapshot","newTasks","docs","map","task","id","data","filter","date","diff","archived","useProjects","projects","setProjects","console","log","orderBy","get","then","allProjects","project","docId","JSON","stringify","useFetchAPI","endpoint","value","setValue","fetching","endpointValue","fetch","response","json"],"mappings":"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","sourcesContent":["/* eslint-disable no-nested-ternary */\r\nimport { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { firebase } from \"../firebase\";\r\nimport { collatedTasksExist } from \"../helpers\";\r\n\r\nexport const useTasks = selectedProject => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [archivedTasks, setArchivedTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let userId;\r\n    if (\r\n      firebase.auth().currentUser &&\r\n      firebase.auth().currentUser.uid !== null\r\n    ) {\r\n      userId = firebase.auth().currentUser.uid;\r\n    } else {\r\n      userId = \"12435\";\r\n    }\r\n    let unsubscribe = firebase\r\n      .firestore()\r\n      .collection(\"tasks\")\r\n      .where(\"userId\", \"==\", userId);\r\n\r\n    unsubscribe =\r\n      selectedProject && !collatedTasksExist(selectedProject)\r\n        ? (unsubscribe = unsubscribe.where(\"projectId\", \"==\", selectedProject))\r\n        : selectedProject === \"TODAY\"\r\n        ? (unsubscribe = unsubscribe.where(\r\n            \"date\",\r\n            \"==\",\r\n            moment().format(\"DD/MM/YYYY\")\r\n          ))\r\n        : selectedProject === \"INBOX\" || selectedProject === 0\r\n        ? (unsubscribe = unsubscribe.where(\"date\", \"==\", \"\"))\r\n        : unsubscribe;\r\n\r\n    unsubscribe = unsubscribe.onSnapshot(snapshot => {\r\n      const newTasks = snapshot.docs.map(task => ({\r\n        id: task.id,\r\n        ...task.data()\r\n      }));\r\n\r\n      setTasks(\r\n        selectedProject === \"NEXT_7\"\r\n          ? newTasks.filter(\r\n              task =>\r\n                moment(task.date, \"DD-MM-YYYY\").diff(moment(), \"days\") <= 7 &&\r\n                task.archived !== true\r\n            )\r\n          : newTasks.filter(task => task.archived !== true)\r\n      );\r\n      setArchivedTasks(newTasks.filter(task => task.archived !== false));\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [selectedProject]);\r\n\r\n  return { tasks, archivedTasks };\r\n};\r\n\r\nexport const useProjects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  if (firebase.auth().currentUser !== null)\r\n    console.log(\"user id: \" + firebase.auth().currentUser.uid);\r\n\r\n  useEffect(() => {\r\n    let userId;\r\n    if (\r\n      firebase.auth().currentUser &&\r\n      firebase.auth().currentUser.uid !== null\r\n    ) {\r\n      userId = firebase.auth().currentUser.uid;\r\n    } else {\r\n      userId = \"12435\";\r\n    }\r\n    firebase\r\n      .firestore()\r\n      .collection(\"projects\")\r\n      .where(\"userId\", \"==\", userId)\r\n      .orderBy(\"projectId\")\r\n      .get()\r\n      .then(snapshot => {\r\n        const allProjects = snapshot.docs.map(project => ({\r\n          ...project.data(),\r\n          docId: project.id\r\n        }));\r\n\r\n        if (JSON.stringify(allProjects) !== JSON.stringify(projects)) {\r\n          setProjects(allProjects);\r\n        }\r\n      });\r\n  }, [projects]);\r\n\r\n  return { projects, setProjects };\r\n};\r\n\r\n//Fetch hook\r\nexport const useFetchAPI = endpoint => {\r\n  const [value, setValue] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetching();\r\n  }, [fetching]);\r\n\r\n  const fetching = async () => {\r\n    let endpointValue = await fetch(endpoint);\r\n    let response = await endpointValue.json();\r\n    setValue(response);\r\n  };\r\n\r\n  return value;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}