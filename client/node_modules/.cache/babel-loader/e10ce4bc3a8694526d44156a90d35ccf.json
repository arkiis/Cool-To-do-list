{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Owner\\\\Documents\\\\cool-todo-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Owner\\\\Documents\\\\cool-todo-list\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React,{useEffect}from\"react\";// Redux\nimport{connect}from\"react-redux\";import{NotificationManager}from\"react-notifications\";import LinearProgress from\"@material-ui/core/LinearProgress\";import{Formik,Field,Form}from\"formik\";import*as Yup from\"yup\";import{labels}from\"../../constants/index\";// Actions\nimport{signIn,clean}from\"../../store/actions/AuthActions\";import{hideModal as _hideModal}from\"../../store/actions/ModalActions\";import Input from\"../Forms/Input.js\";import Message from\"../Message\";import Modal from\"../Modal\";var LoginSchema=Yup.object().shape({email:Yup.string().email(\"email dosen't work :/\").required(\"You need an email silly!\"),password:Yup.string().required(\"You need a password silly!\").min(8,\"Too short\")});var Login=function Login(_ref){var signIn=_ref.signIn,loading=_ref.loading,error=_ref.error,hideModal=_ref.hideModal,cleanUp=_ref.cleanUp;useEffect(function(){return function(){cleanUp();};},[cleanUp]);var onClose=function onClose(){hideModal();};var onSubmit=function onSubmit(){hideModal();};return React.createElement(Formik,{initialValues:{email:\"\",password:\"\"},validationSchema:LoginSchema,onSubmit:/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref3){var setSubmitting;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setSubmitting=_ref3.setSubmitting;_context.next=3;return signIn(values);case 3:setSubmitting(false);onSubmit();case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}()},function(_ref4){var isSubmitting=_ref4.isSubmitting,isValid=_ref4.isValid;return React.createElement(Modal,{title:\"Sign In\",onClose:onClose},React.createElement(Form,{className:\"signUpWrapper\"},React.createElement(Field,{type:\"email\",label:labels.email,name:\"email\",component:Input}),React.createElement(Field,{type:\"password\",label:labels.password,name:\"password\",component:Input}),React.createElement(\"button\",{disabled:!isValid||isSubmitting,type:\"submit\"},\"Sign in\"),loading&&React.createElement(\"div\",{style:{textAlign:\"center\"}},React.createElement(LinearProgress,null)),React.createElement(\"div\",null,React.createElement(Message,{error:true,show:error},NotificationManager.error({error:error})))));});};var mapStateToProps=function mapStateToProps(_ref5){var auth=_ref5.auth;return{loading:auth.loading,error:auth.error};};var mapDispatchToProps={signIn:signIn,hideModal:function hideModal(){return _hideModal();},cleanUp:clean};export default connect(mapStateToProps,mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Users/Owner/Documents/cool-todo-list/client/src/components/Auth/Login.js"],"names":["React","useEffect","connect","NotificationManager","LinearProgress","Formik","Field","Form","Yup","labels","signIn","clean","hideModal","Input","Message","Modal","LoginSchema","object","shape","email","string","required","password","min","Login","loading","error","cleanUp","onClose","onSubmit","values","setSubmitting","isSubmitting","isValid","textAlign","mapStateToProps","auth","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { labels } from \"../../constants/index\";\r\n// Actions\r\nimport { signIn, clean } from \"../../store/actions/AuthActions\";\r\nimport { hideModal } from \"../../store/actions/ModalActions\";\r\nimport Input from \"../Forms/Input.js\";\r\nimport Message from \"../Message\";\r\nimport Modal from \"../Modal\";\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email(`email dosen't work :/`)\r\n    .required(\"You need an email silly!\"),\r\n  password: Yup.string()\r\n    .required(\"You need a password silly!\")\r\n    .min(8, \"Too short\")\r\n});\r\n\r\nconst Login = ({ signIn, loading, error, hideModal, cleanUp }) => {\r\n  useEffect(() => {\r\n    return () => {\r\n      cleanUp();\r\n    };\r\n  }, [cleanUp]);\r\n\r\n  const onClose = () => {\r\n    hideModal();\r\n  };\r\n  const onSubmit = () => {\r\n    hideModal();\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        password: \"\"\r\n      }}\r\n      validationSchema={LoginSchema}\r\n      onSubmit={async (values, { setSubmitting }) => {\r\n        await signIn(values);\r\n        setSubmitting(false);\r\n        onSubmit();\r\n      }}\r\n    >\r\n      {({ isSubmitting, isValid }) => (\r\n        <Modal title=\"Sign In\" onClose={onClose}>\r\n          <Form className=\"signUpWrapper\">\r\n            <Field\r\n              type=\"email\"\r\n              label={labels.email}\r\n              name=\"email\"\r\n              component={Input}\r\n            />\r\n            <Field\r\n              type=\"password\"\r\n              label={labels.password}\r\n              name=\"password\"\r\n              component={Input}\r\n            />\r\n\r\n            <button disabled={!isValid || isSubmitting} type=\"submit\">\r\n              Sign in\r\n            </button>\r\n            {loading && (\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <LinearProgress />\r\n              </div>\r\n            )}\r\n            <div>\r\n              <Message error show={error}>\r\n                {NotificationManager.error({ error })}\r\n              </Message>\r\n            </div>\r\n          </Form>\r\n        </Modal>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  loading: auth.loading,\r\n  error: auth.error\r\n});\r\nconst mapDispatchToProps = {\r\n  signIn: signIn,\r\n  hideModal: () => hideModal(),\r\n  cleanUp: clean\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}